import { generateCodeFrameWithKotlinStacktrace, generateCodeFrameWithSwiftStacktrace } from './legacy';
import type { UTSOutputOptions } from '@dcloudio/uts';
export * from './tsc';
export declare const sourcemap: {
    generateCodeFrameWithKotlinStacktrace: typeof generateCodeFrameWithKotlinStacktrace;
    generateCodeFrameWithSwiftStacktrace: typeof generateCodeFrameWithSwiftStacktrace;
};
export { compileApp, CompileAppOptions } from './uvue/index';
export { parseInjectModules, parseExtApiProviders } from './utils';
export * from './sourceMap';
export { parseUTSRuntimeStacktrace, parseUTSKotlinRuntimeStacktrace, parseUTSJavaScriptRuntimeStacktrace, } from './stacktrace';
export { compile as toKotlin } from './kotlin';
export { compile as toSwift } from './swift';
export interface CompileResult {
    code: string;
    deps: string[];
    encrypt: boolean;
    meta?: any;
    dir: string;
}
interface CompilerOptions {
    isX: boolean;
    isPlugin: boolean;
    isSingleThread: boolean;
    isExtApi?: boolean;
    extApis?: Record<string, [string, string]>;
    transform?: UTSOutputOptions['transform'];
    sourceMap?: boolean;
    uni_modules?: string[];
}
export declare function compile(pluginDir: string, { isX, isPlugin, extApis, isExtApi, transform, sourceMap, isSingleThread, uni_modules, }?: CompilerOptions): Promise<CompileResult | void>;
