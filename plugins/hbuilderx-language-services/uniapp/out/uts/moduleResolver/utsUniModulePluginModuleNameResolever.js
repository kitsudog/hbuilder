"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UtsUniModulePluginModuleNameResolever=void 0;const fs=require("fs"),path=require("path"),hx=require("../../../../core"),common_1=require("../../utils/common"),tsUtils_1=require("../../utils/tsUtils"),types_1=require("../types"),utsLanguageServiceInterface_1=require("../utsLanguageServiceInterface");class UtsUniModulePluginModuleNameResolever{constructor(t){this._info=t,this._cache=new Map,this.overwriteSysApi(this._info)}resolveModuleName(t,e,i,s,n,o,r,a){let l=e;t.kind!=hx.HXProjectKind.UniApp&&t.kind!=hx.HXProjectKind.UniApp_Cli||l.startsWith("@/")&&(l=path.join(t.sourceRoot,l.substring(2)));let u=hx.toNormalizedPath(path.resolve(path.dirname(i),l),this._info.ts);if(utsLanguageServiceInterface_1.Global.isUtsPluginRoot(u,t)){let e=hx.toNormalizedPath(path.join(u,"utssdk","index.uts"),this._info.ts);return fs.existsSync(e)?(this._cache.has(e)&&this._cache.delete(e),{isExternalLibraryImport:!1,resolvedFileName:e,extension:".uts"}):(e=hx.toNormalizedPath(path.join(u,"utssdk","interface.uts"),this._info.ts),fs.existsSync(e)?{isExternalLibraryImport:!1,resolvedFileName:e,extension:".uts"}:{isExternalLibraryImport:!1,resolvedFileName:this.getUtsPluginVertualDoumentName(e,t),extension:".uts"})}}filterCompletion(t,e,i,s){let n=e.getProgram(),o=null==n?void 0:n.getSourceFile(i);if(o&&utsLanguageServiceInterface_1.UtsPluginLanguageService.isImportStringLiteral(o,s,this._info.ts)){const e=new Set,n=[];t.entries=t.entries.filter((t=>{let r=t.insertText||t.name;const a=r.startsWith("@/");a&&(r=this._info.project.sourceRoot+r.slice(1));const l=hx.toNormalizedPath(path.resolve(path.dirname(i),r),this._info.ts);if(fs.existsSync(l)&&utsLanguageServiceInterface_1.Global.isUtsPluginFile(l,this._info.project)){let u=(0,common_1.getUniModuleRoot)(l);if(u&&(u=hx.toNormalizedPath(u,this._info.ts),!e.has(u))){e.add(u),r=a?u.replace(hx.toNormalizedPath(this._info.project.sourceRoot,this._info.ts),"@"):path.relative(path.dirname(i),u).replace(/\\/g,"/");const c=this;function h(){let e=c._info.ts.getTokenAtPosition(o,s),i=e.getText(),n=(0,tsUtils_1.fixTsNodeText)(i);return c._info.ts.createTextSpan(t.replacementSpan?t.replacementSpan.start:i==n?e.getStart():e.getStart()+1,n.length)}n.push({name:r,kind:this._info.ts.ScriptElementKind.string,sortText:r,replacementSpan:h()})}return!1}return!0})),t.entries.push(...n)}return t}fileterDefinition(t,e,i,s){let n=e.getProgram(),o=null==n?void 0:n.getSourceFile(i);if(o){let t=this._info.ts.getTokenAtPosition(o,s);if(utsLanguageServiceInterface_1.UtsPluginLanguageService.isImportStringLiteral(o,s,this._info.ts)){let e=(0,tsUtils_1.fixTsNodeText)(t.getText());if(e.startsWith("@/")?e=hx.toNormalizedPath(this._info.project.sourceRoot+e.slice(1),this._info.ts):path.isAbsolute(e)||(e=hx.toNormalizedPath(path.resolve(path.dirname(i),e),this._info.ts)),utsLanguageServiceInterface_1.Global.isUtsPluginRoot(e,this._info.project)){let i=path.join(e,"utssdk","index.uts"),s=()=>({textSpan:this._info.ts.createTextSpan(t.getStart(),t.getText().length),definitions:[{name:i,kind:this._info.ts.ScriptElementKind.moduleElement,containerKind:this._info.ts.ScriptElementKind.moduleElement,containerName:i,fileName:i,textSpan:this._info.ts.createTextSpan(0,0)}]});if(fs.existsSync(i))return s();if(i=path.join(e,"utssdk","interface.uts"),fs.existsSync(i))return s();for(let t of Object.values(types_1.UtsPluginPlatform))if(i=path.join(e,"utssdk",t,"index.uts"),fs.existsSync(i))return s()}}}return t}overwriteSysApi(t){const e=t.ts.sys,i=e.fileExists.bind(e),s=e.readFile.bind(e);e.fileExists=e=>i(e)||this._cache.has(hx.toNormalizedPath(e,t.ts)),e.readFile=(e,i)=>{var n;let o=hx.toNormalizedPath(e,t.ts);return this._cache.has(o)?null===(n=this._cache.get(o))||void 0===n?void 0:n.getText():s(e,i)}}getUtsPluginVertualDoumentName(t,e){const i=t;return this._cache.has(i)||this._cache.set(i,{name:i,getText:function(){if(fs.existsSync(t))return fs.readFileSync(t).toString();const i=utsLanguageServiceInterface_1.Global.resolveUtsPluginRootPath(t,e),s=(0,common_1.isUniModule)(t);let n="";if(i)for(let t of Object.values(types_1.UtsPluginPlatform)){const e=path.join(i,s?"utssdk":"",t,"index.uts");fs.existsSync(e)&&(n+=`export * from './${t}/index.uts'\n`)}return n}}),i}}exports.UtsUniModulePluginModuleNameResolever=UtsUniModulePluginModuleNameResolever;