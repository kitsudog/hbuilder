"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UTSPluginAndroidPolicy=exports.UTSPluginCommonPolicy=exports.UTSPluginPolicy=void 0;const types_1=require("../types"),utsLanguageServiceInterface_1=require("../utsLanguageServiceInterface"),android_support_1=require("./android_support"),common_support_1=require("./common_support");class UTSPluginPolicy{constructor(){this._realLs=void 0}proxyUniModuleUtsPluginLanguageService(e){const i=e.getUtsLanguageService(),t=Object.create(null);for(let e of Object.keys(i)){const n=i[e];t[e]=(...e)=>n.apply(i,e)}return t.getCompletionsAtPositionAsync=async(i,t,n)=>e.getCompletionsAtPosition(i,t,n),t.getCompletionEntryDetails=(i,t,n,o,s,r,c)=>e.getCompletionEntryDetails(i,t,n,o,s,r,c),t.getDefinitionAndBoundSpanAsync=async(i,t)=>e.getDefinitionAndBoundSpan(i,t),t.getQuickInfoAtPositionAsync=async(i,t)=>e.getQuickInfoAtPosition(i,t),t.getSyntacticDiagnosticsAsync=async i=>e.getSyntacticDiagnosticsAsync(i),t.getSemanticDiagnosticsAsync=async i=>e.getSemanticDiagnosticsAsync(i),t.getSuggestionDiagnosticsAsync=async i=>e.getSuggestionDiagnosticsAsync(i),t.getSignatureHelpItems=(i,t,n)=>e.getSignatureHelpItems(i,t,n),t.getCodeFixesAtPosition=(i,t,n,o,s,r)=>e.getCodeFixesAtPosition(i,t,n,o,s,r),t.getFileReferencesAsync=async i=>e.getFileReferences(i),t.findReferencesAsync=async(i,t)=>e.findReferences(i,t),t}}exports.UTSPluginPolicy=UTSPluginPolicy;class UTSPluginCommonPolicy extends UTSPluginPolicy{constructor(e){super(),this._info=e}get kind(){return"uts_plugin_common"}getLanguageServiceContextIfHasPolicy(e,i){let t=utsLanguageServiceInterface_1.Global.resolveUtsPluginPlatform(e,this._info.project);if(t&&t===types_1.UtsPluginPlatform.COMMON)return this._realLs||(this._realLs=this.proxyUniModuleUtsPluginLanguageService(new common_support_1.CommonLanguageService(this._info))),[{languageService:this._realLs,fileName:e,position:i,target:void 0}]}}exports.UTSPluginCommonPolicy=UTSPluginCommonPolicy;class UTSPluginAndroidPolicy extends UTSPluginPolicy{constructor(e){super(),this._info=e}get kind(){return"uts_plugin_android"}getLanguageServiceContextIfHasPolicy(e,i){let t=utsLanguageServiceInterface_1.Global.resolveUtsPluginPlatform(e,this._info.project);if(t&&t===types_1.UtsPluginPlatform.APP_ANDROID)return this._realLs||(this._realLs=this.proxyUniModuleUtsPluginLanguageService(new android_support_1.AndroidLanguageService(this._info))),[{languageService:this._realLs,fileName:e,position:i,target:void 0}]}}exports.UTSPluginAndroidPolicy=UTSPluginAndroidPolicy;