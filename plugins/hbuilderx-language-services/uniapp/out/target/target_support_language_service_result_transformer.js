"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TargetSupportResultTransformer=void 0;const hx=require("../../../core");class TargetExtTransformer{constructor(t,e){this._info=t,this._sourceMapCache=e}isEnabled(t){return this._sourceMapCache.hasTargetFileName(t)}transform(t){const e=this.getTargetInfo(t.fileName);if(e){t.fileName=e.sourceFile;const r=t.positions;for(let t=0;t<r.length;++t)r[t]=this.getOrginalPosition(e,r[t]);const n=t.lineChars;for(let t=0;t<n.length;++t)n[t]=this.getOriginalLineChar(e,n[t])}return t}getTargetInfo(t){if(this._sourceMapCache.hasTargetFileName(t))return this._sourceMapCache.getTargetFileInfo(t)}getOrginalPosition(t,e){const r=this._info.tsinfo.project.projectService.getScriptInfo(this._info.ts.server.toNormalizedPath(t.targetFile)),n=this._info.tsinfo.project.projectService.getScriptInfo(this._info.ts.server.toNormalizedPath(t.sourceFile));if(r&&n){const a=r.positionToLineOffset(e),s=t.getOriginPosition({line:a.line,char:a.offset});return n.lineOffsetToPosition(s.line,s.char)}return e}getOriginalLineChar(t,e){const r=t.getOriginPosition(e);return null!=r?r:e}}class TargetSupportResultTransformer{constructor(t,e){this._extTransformers=new Map;const r=new TargetExtTransformer(t,e);for(let t of Object.values(hx.TargetKind))this._extTransformers.set(t,[r])}transformCompletion(t,e,r){var n;const a=new Map;return null===(n=e.entries)||void 0===n||n.forEach((e=>{var n,s;if(e.replacementSpan&&e.replacementSpan.start)if(a.has(e.replacementSpan.start))e.replacementSpan.start=a.get(e.replacementSpan.start);else{let i=this.extTransformSimple(t,r,[e.replacementSpan.start]);a.set(e.replacementSpan.start,null!==(n=i.positions[0])&&void 0!==n?n:e.replacementSpan.start),e.replacementSpan.start=null!==(s=i.positions[0])&&void 0!==s?s:e.replacementSpan.start}})),e}transformDefinition(t,e,r){var n,a;const s=this.extTransformSimple(t,r,[e.textSpan.start]);return e.textSpan.start=null!==(n=s.positions[0])&&void 0!==n?n:e.textSpan.start,null===(a=e.definitions)||void 0===a||a.forEach((e=>{var r,n;const a=[e.textSpan.start];e.contextSpan&&a.push(e.contextSpan.start);const s=this.extTransformSimple(t,e.fileName,a);e.fileName=s.fileName,e.textSpan.start=null!==(r=s.positions[0])&&void 0!==r?r:e.textSpan.start,e.contextSpan&&(e.contextSpan.start=null!==(n=s.positions[1])&&void 0!==n?n:e.contextSpan.start)})),e}transformQuickInfo(t,e,r){var n;const a=this.extTransformSimple(t,r,[e.textSpan.start]);return e.textSpan.start=null!==(n=a.positions[0])&&void 0!==n?n:e.textSpan.start,e}transformReference(t,e){return e.forEach((e=>{var r;const n=this.extTransformSimple(t,e.definition.fileName,[e.definition.textSpan.start]);e.definition.fileName=n.fileName,e.definition.textSpan.start=null!==(r=n.positions[0])&&void 0!==r?r:e.definition.textSpan.start,e.references.forEach((e=>{var r;const n=this.extTransformSimple(t,e.fileName,[e.textSpan.start]);e.fileName=n.fileName,e.textSpan.start=null!==(r=n.positions[0])&&void 0!==r?r:e.textSpan.start}))})),e}transformDiagnostic(t,e,r,n){return e=e.map((e=>{var a,s;if(e.start){const i=this.extTransformSimple(t,r,[e.start]);e.start=null!==(a=i.positions[0])&&void 0!==a?a:e.start,e.file=null===(s=n.getProgram())||void 0===s?void 0:s.getSourceFile(i.fileName),e.target=`${TargetSupportResultTransformer.TARGET_FLAG}${t}`}return e}))}transformFileReference(t,e){return e.forEach((e=>{var r;const n=this.extTransformSimple(t,e.fileName,[e.textSpan.start]);e.fileName=n.fileName,e.textSpan.start=null!==(r=n.positions[0])&&void 0!==r?r:e.textSpan.start})),e}transformCodeFix(t,e){return e.forEach((e=>{e.changes.forEach((e=>{let r=e.textChanges.map((t=>t.span.start));const n=this.extTransformSimple(t,e.fileName,r);e.fileName=n.fileName,e.textChanges.forEach(((t,e)=>{var r;t.span.start=null!==(r=n.positions[e])&&void 0!==r?r:t.span.start}))}))})),e}transformLineAndCharacter(t,e,r){const n=this.extTransfrom(t,{fileName:r,positions:[],lineChars:[{line:e.line+1,char:e.character+1}]});return{line:n.lineChars[0].line-1,character:n.lineChars[0].char-1}}transformSignature(t,e,r){const n=this.extTransformSimple(t,r,[e.applicableSpan.start]);return e.applicableSpan.start=n.positions[0],e}registerTransformer(t,e){this._extTransformers.get(t).push(e)}extTransformSimple(t,e,r=[]){return this.extTransfrom(t,{fileName:e,positions:r,lineChars:[]})}extTransfrom(t,e){const r=this._extTransformers.get(t);let n=0;return function t(e){if(n++>10)return n--,e;for(const a of r)if(a.isEnabled(e.fileName))return e=t(e=a.transform(e)),n--,e;return n--,e}(e)}}exports.TargetSupportResultTransformer=TargetSupportResultTransformer,TargetSupportResultTransformer.TARGET_FLAG="[target]";