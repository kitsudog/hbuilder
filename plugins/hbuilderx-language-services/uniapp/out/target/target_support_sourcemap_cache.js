"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TargetSupportSourceMapCache=void 0;const path=require("path"),fs=require("fs"),hx=require("../../../core"),uni_preprocess_1=require("@dcloudio/uni-preprocess"),sourcemap_codec_1=require("@jridgewell/sourcemap-codec"),sourceMapUtils=require("source-map-js"),jsonc=require("jsonc-parser");class TargetSupportSourceMapCache{constructor(e,t){this._info=e,this._serverHost=t,this._originFileInfosCache=new Map,this._targetFileInfosCache=new Map,this._targetBindingFileCache=new Map,this.parsePagesJsonFileLimit()}upToDate(e){const t=e;if(e=this.transformFileName(e),hx.fileEndsWith(e,[".d.ts",".html"])||this._targetBindingFileCache.has(e)||!fs.existsSync(e)||!this._info.project.isProjectOf(e,this._info.ts))return!1;const i=this._serverHost.getScriptVersion(t);if(this._originFileInfosCache.has(e)&&this._originFileInfosCache.get(e).version===i&&this._originFileInfosCache.size!==Object.keys(hx.TargetKind).length)return!0;const r=this._serverHost.getScriptSnapshot(t);if(!r)return!1;const n=r.getText(0,r.getLength());if(!n.includes("#endif")||!n.includes("#ifdef"))return this.hasOriginFileName(t)&&this.removeOrginFile(t),!1;const s=new Map;this._originFileInfosCache.set(e,{fileName:t,version:i,text:n,targetFileInfos:s});for(const r of Object.values(hx.TargetKind)){const o=this.generateTargetFileName(e,r);try{const a=this.getTargetUpdateContext(r),{code:c,map:h}=(0,uni_preprocess_1.preprocess)(n,{type:"auto",context:a,sourceMap:{hires:!0,file:o,source:e,includeContent:!0}});if(!h){this._info.tsinfo.project.log("[target] generate "+r+": source map failed");continue}const l=this._info.tsinfo.project.projectService.getOrCreateScriptInfoForNormalizedPath(this._info.ts.server.toNormalizedPath(o),!1,void 0,void 0,void 0,{fileExists:e=>hx.pathIsPath(e,o)});if(!l)continue;this._info.tsinfo.project.markAsDirty(),l.open(c);const g=this.computeMappingRanges(h),f={kind:r,text:c,sourceRanges:g[0],targetRanges:g[1],sourceMap:h,version:i,sourceFile:e,noTransformSourceFile:t,targetFile:o,getTargetPosition:e=>{const t=new sourceMapUtils.SourceMapConsumer(h).generatedPositionFor({line:e.line,column:e.char-1,source:h.sources[0]});return{line:t.line,char:t.column+1}},getOriginPosition:e=>{const t=new sourceMapUtils.SourceMapConsumer(h).originalPositionFor({line:e.line,column:e.char-1});return{line:t.line,char:t.column+1}}};s.set(r,f),this._targetFileInfosCache.set(o,f)}catch(t){return this._info.tsinfo.project.log(`[target] up to date file: ${e} with target: ${r} failed,error:${t}`),!1}}return!0}removeOrginFile(e){if(e=this.transformFileName(e),this._originFileInfosCache.has(e)){this._originFileInfosCache.get(e).targetFileInfos.forEach((e=>{if(e){const t=this._info.tsinfo.project.projectService.getScriptInfo(e.targetFile);null==t||t.detachFromProject(this._info.tsinfo.project),this._targetFileInfosCache.delete(e.targetFile)}})),this._originFileInfosCache.delete(e)}}getTargetFromFileName(e,t){if(e=this.transformFileName(e),this._targetBindingFileCache.has(e))return[this._targetBindingFileCache.get(e)];const i=this._originFileInfosCache.get(e);if(!i)return[hx.TargetKind.UNKNOWN];const r=[];for(const e of Object.values(hx.TargetKind)){const n=i.targetFileInfos.get(e);if(n)for(let e=0;e<n.sourceRanges.length;++e){const i=n.sourceRanges[e];t.line>i.start.line?(t.line<i.end.line||t.line===i.end.line&&t.char<=i.end.char)&&r.push(n.kind):t.line===i.start.line&&t.char>=i.start.char&&(t.line<i.end.line||t.line===i.end.line&&t.char<=i.end.char)&&r.push(n.kind)}}return r.length?r:[hx.TargetKind.UNKNOWN]}generateTargetFileName(e,t){e=this.transformFileName(e);const i=path.extname(e);return this.transformFileName(`${e.slice(0,0-i.length)}.${t}.${i.startsWith(".")?i.slice(1):i}`.toLowerCase())}hasTargetFileName(e){return e=this.transformFileName(e),this._targetFileInfosCache.has(e)}getTargetFileInfo(e){return e=this.transformFileName(e),this._targetFileInfosCache.get(e)}hasOriginFileName(e){return e=this.transformFileName(e),this._originFileInfosCache.has(e)}getOriginFileInfo(e){return e=this.transformFileName(e),this._originFileInfosCache.get(e)}getTargetFiles(e){let t=[];for(const[i,r]of this._originFileInfosCache){let i=r.targetFileInfos.get(e);i&&t.push(i.targetFile)}return t}isTargetBindingFile(e){return e=this.transformFileName(e),this._targetBindingFileCache.get(e)}computeMappingRanges(e){const t=[],i=e.mappings,r=(0,sourcemap_codec_1.decode)(i);let n={start:{line:0,char:0},end:{line:0,char:0}},s=-1,o=-1,a=-1,c=!1;for(let e=0;e<r.length;++e){const i=r[e];for(let e=0;e<i.length;++e){const r=i[e];if(r.length>=4){const i=r[2],h=r[3];c?(s+1<i||s+1==i&&o+1<h)&&(n.end.line=s,n.end.char=a,t.push(n),n={start:{line:0,char:0},end:{line:0,char:0}},c=!1,--e):(c=!0,n.start.line=i,n.start.char=h),s=i,o=h}}e!==r.length-1&&(a=o,o=-1)}return n.end.line=s,n.end.char=a,t.push(n),[t,[]]}transformFileName(e){var t;return(null!==(t=hx.noTsToNormalizedPath(e))&&void 0!==t?t:e).toLowerCase()}getTargetUpdateContext(e){switch(e){case hx.TargetKind["APP-ANDROID"]:return{UNI_APP_X:!0,APP:!0,APP_ANDROID:!0,APP_IOS:!1,WEB:!1,H5:!1};case hx.TargetKind.WEB:return{UNI_APP_X:!0,WEB:!0,H5:!0,APP:!1,APP_ANDROID:!1,APP_IOS:!1};case hx.TargetKind["APP-IOS"]:return{UNI_APP_X:!0,APP:!0,APP_IOS:!0,APP_ANDROID:!1,WEB:!1,H5:!1};case hx.TargetKind.UNKNOWN:default:return{UNI_APP_X:!1,APP:!1,APP_ANDROID:!1,WEB:!1,H5:!1,APP_IOS:!1}}}parsePagesJsonFileLimit(){var e,t;const i=this._info.project.fsPath,r=path.join(i,"pages.json"),n=()=>{if(!fs.existsSync(r))return;const e=hx.readFileToString(r);if(!e)return;const t=new Map;for(const n of Object.values(hx.TargetKind)){const o=this.getTargetUpdateContext(n),a=new Set;t.set(n,a);try{const{code:t}=(0,uni_preprocess_1.preprocess)(e,{type:"auto",context:o,sourceMap:{hires:!1,file:r,source:r,includeContent:!1}}),n=jsonc.parse(t);if(n&&n.hasOwnProperty("pages")){const e=n.pages;if(!Array.isArray(e))return;for(const t of e){const e=t.path;if("string"==typeof e){const t=s(path.resolve(i,e),[".uvue","vue"]);t&&a.add(t)}}}}catch(e){this._info.tsinfo.project.log("preprocess pages.json error")}}const n=t.get(hx.TargetKind.UNKNOWN);t.delete(hx.TargetKind.UNKNOWN);const o=new Map;for(const[e,i]of t)for(const t of i)n.has(t)||o.set(this.transformFileName(t),e);for(const[e]of this._targetBindingFileCache)this.hasOriginFileName(e)&&this.removeOrginFile(e);this._targetBindingFileCache=o};n();function s(e,t){if(fs.existsSync(e))return e;for(let i=0;i<t.length;++i){const r=e+t[i];if(fs.existsSync(r))return r}}(null!==(t=null===(e=this._info.ts.sys.watchFile)||void 0===e?void 0:e.bind(this._info.ts.sys))&&void 0!==t?t:fs.watchFile)(r,(()=>{n()}))}}exports.TargetSupportSourceMapCache=TargetSupportSourceMapCache;