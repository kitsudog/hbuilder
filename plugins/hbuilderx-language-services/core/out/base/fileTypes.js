"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fileTypesTool=void 0;const pathUtils_1=require("./pathUtils"),util_1=require("./util"),defTypes=["style","script","tag"],fileTypes={style:[{name:"css",suffix:[".css",".wxss",".acss",".ttss",".qss",".nss"]},{name:"scss",suffix:[".scss",".sass"]},{name:"less",suffix:[".less",".less.erb"]}],script:[{name:"js",suffix:[".js",".wxs",".sjs",".jql"]},{name:"ts",suffix:[".ts"]},{name:"uts",suffix:[".uts"]}],tag:[{name:"vue",suffix:[".vue",".nvue",".swan",".axml",".ttml",".qml",".nml",".ux"]},{name:"uvue",suffix:[".uvue"]},{name:"html",suffix:[".html",".htm",".shtml",".shtm",".xhtml",".xht",".hta",".cshtml",".jsp",".erb",".nview",".tpl"]}]},uniAppFileTypes={tag:[{name:"uniapp-vue",suffix:[".vue",".nvue"]},{name:"uniapp-x-vue",suffix:[".vue",".uvue"]},{name:"uniapp-vue&uniapp-x-vue",suffix:[".vue",".uvue",".nvue"]}]};class FileTypesTool{constructor(){this._fileTypes=(0,util_1.deepAssign)(fileTypes,uniAppFileTypes)}getFileSuffixFromAbbr(e){let s=[];for(let i=0;i<defTypes.length;i++){const t=defTypes[i];this._fileTypes[t].forEach((i=>{i.name===e&&s.push(...i.suffix)}))}return s=[...new Set(s)],s}getFileSuffixFromAbbrList(e){let s=[];for(let i=0;i<e.length;i++){const t=e[i],u=this.getFileSuffixFromAbbr(t);s.push(...u)}return s=[...new Set(s)],s}getFileSuffixFromType(e){let s=[];const i=this._fileTypes[e];if(!i)return s;for(let e=0;e<i.length;e++){const t=i[e];s.push(...t.suffix)}return[...new Set(s)]}findFileAbbrFromType(e,s){let i;const t=this._fileTypes[s];if(!t)return i;const u=t.find((s=>(0,pathUtils_1.fileEndsWith)(e,s.suffix)));return i=null==u?void 0:u.name,i}isSupportFileFromAbbrAndType(e,s,i){const t=this.findFileAbbrFromType(e,i);return!!t&&!!s.includes(t)}isSupportFileFromNameList(e,s){const i=this.getFileSuffixFromAbbrList(s);return(0,pathUtils_1.fileEndsWith)(e,i)}isScriptType(e){return!!this.findFileAbbrFromType(e,"script")}isStyleType(e){return!!this.findFileAbbrFromType(e,"style")}isTagType(e){return!!this.findFileAbbrFromType(e,"tag")}isVueType(e){return this.isSupportFileFromAbbrAndType(e,["vue","uvue"],"tag")}isHtmlType(e){return this.isSupportFileFromAbbrAndType(e,["html"],"tag")}isUniAppVueFile(e){return this.isSupportFileFromNameList(e,["uniapp-vue"])}isUniAppXVueFile(e){return this.isSupportFileFromNameList(e,["uniapp-x-vue"])}isUniAppOrUniAppXVueFile(e){return this.isSupportFileFromNameList(e,["uniapp-vue&uniapp-x-vue"])}}const fileTypesTool=new FileTypesTool;exports.fileTypesTool=fileTypesTool;