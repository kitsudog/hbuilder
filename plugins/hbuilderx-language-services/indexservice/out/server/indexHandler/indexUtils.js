"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resultConversion=exports.mergeTaskMap=exports.indexQueryData=exports.getTaskMapFromRef=exports.doRemainingTasks=void 0;const fs=require("fs"),core_1=require("../../../../core");function getTaskMapFromRef(e,r){const t=new Map,o=e.getProjectHandler(r.projectUri).fileData.indexData;if(!o)return;const n=(0,core_1.iterateGetReference)(o,[r.fileUri],new Map),s=(0,core_1.getReferenceList)(n);return s&&0!==s.length&&(s.forEach((e=>{const o=(0,core_1.noTsToNormalizedPath)(e);o&&fs.existsSync(o)&&(fs.statSync(o).isDirectory()||t.set(e,{fileUri:e,projectUri:r.projectUri,isChanged:!1}))})),0!==t.size)?t:void 0}function mergeTaskMap(e,r){return 0===r.size||r.forEach(((r,t)=>{e.has(t)||e.set(t,r)})),e}function resultConversion(e){const r=[];e.forEach((e=>{if(!e)return;const t=(0,core_1.mapToObj)(e.kindMap),o=Object.create({});Object.keys(t).forEach((e=>{const r=(0,core_1.mapToObj)(t[e]);o[e]=r}));const n={canonicalVersion:e.canonicalVersion,projectVersion:e.projectVersion,projectUri:e.projectUri,kindMap:o};r.push(n)}));const t={data:r};return(0,core_1.getObjectSize)(t)>267386880?[]:r}async function doRemainingTasks(e,r,t,o){await e.stopTask();let n=e.getTaskFromProject(t,!0);n||(n=new Map);const s=r.getProjectHandler(t);if(r.updateProjectVersion(t),o||s.fileTask.isFirstGetMap){const r=s.fileTask.getTaskMap();if(!r)return!1;console.log(`[IndexServer] Query DoRemainingTasks TaskSize: ${r.size}`);const t=mergeTaskMap(n,r);e.startTaskSync(t)}else e.startTaskSync(n);return o&&r.getProjectHandler(t).fileData.saveIndexData(),!0}async function indexQueryData(e,r,t,o){if(o){console.log("[IndexServer] Query DoRemainingTasks Start");let o=[];t.forEach((e=>{o.push(e.projectUri)})),o=[...new Set(o)];for(const t of o)await doRemainingTasks(e,r,t,!1);console.log("[IndexServer] Query DoRemainingTasks End")}const n=[];console.log("[IndexServer] Query GetIndexData Start");for(let e=0;e<t.length;e++){const o=t[e];o.fileUri&&o.fileUri.endsWith("html.__VLS_script.ts")&&(o.fileUri=o.fileUri.substring(0,o.fileUri.length-16));const s=r.getProjectHandler(o.projectUri).fileData.queryIndexData(o);s&&n.push(s)}if(console.log("[IndexServer] Query GetIndexData End"),0!==n.length)return n;console.log("[IndexServer] Query NoData!")}exports.getTaskMapFromRef=getTaskMapFromRef,exports.mergeTaskMap=mergeTaskMap,exports.resultConversion=resultConversion,exports.doRemainingTasks=doRemainingTasks,exports.indexQueryData=indexQueryData;