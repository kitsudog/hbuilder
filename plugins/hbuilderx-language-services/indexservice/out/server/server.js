"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fs=require("fs"),vscode_languageserver_textdocument_1=require("vscode-languageserver-textdocument"),node_1=require("vscode-languageserver/node"),vscode_uri_1=require("vscode-uri"),core_1=require("../../../core"),nls=require("../localize/localize"),documentContext_1=require("../utils/documentContext"),indexUtils_1=require("./indexHandler/indexUtils"),logger_1=require("./logger"),processorManager_1=require("./processorManager"),serverInit_1=require("./serverInit"),localize=nls.loadMessageBundle(__filename),connection=(0,node_1.createConnection)(node_1.ProposedFeatures.all),documents=new node_1.TextDocuments(vscode_languageserver_textdocument_1.TextDocument);let hasConfigurationCapability=!1,hasWorkspaceFolderCapability=!1,workspaceFolders=[];const processorManager=processorManager_1.IndexProcessorManager.instance();let eventResponse,processId;var UriType;function getUriType(e){let o=vscode_uri_1.URI.parse(e).fsPath;return fs.existsSync(o)?fs.lstatSync(o).isDirectory()?UriType.Folder:UriType.File:UriType.Undefined}connection.onInitialize((e=>{const o=e.initializationOptions.configList,n=new logger_1.Logger(connection,o);console.log=n.log.bind(n),console.warn=n.warn.bind(n),console.error=n.error.bind(n),processId=e.initializationOptions.processId;const r=e.capabilities;workspaceFolders=e.workspaceFolders,Array.isArray(workspaceFolders)||(workspaceFolders=[]),connection.console.log(JSON.stringify(r)),hasConfigurationCapability=!(!r.workspace||!r.workspace.configuration),hasWorkspaceFolderCapability=!(!r.workspace||!r.workspace.workspaceFolders);const t={capabilities:{textDocumentSync:{openClose:!0,change:node_1.TextDocumentSyncKind.Incremental}}};return hasWorkspaceFolderCapability&&(t.capabilities.workspace={workspaceFolders:{supported:!0}}),(0,serverInit_1.initIndexer)(e,processorManager),eventResponse=(0,serverInit_1.initEventResponse)(documents,processorManager,workspaceFolders),(0,serverInit_1.initPipeServer)(e,eventResponse),t})),connection.onInitialized((()=>{hasConfigurationCapability&&connection.client.register(node_1.DidChangeConfigurationNotification.type,void 0),hasWorkspaceFolderCapability&&(connection.client.register(node_1.DidChangeWorkspaceFoldersNotification.type),connection.onNotification(node_1.DidChangeWorkspaceFoldersNotification.type,(e=>{const o=e.event.added,n=e.event.removed,r=[];if(workspaceFolders)for(const e of workspaceFolders)n.some((o=>o.uri===e.uri))||o.some((o=>o.uri===e.uri))||r.push(e);workspaceFolders=r.concat(o),n.forEach((e=>{eventResponse.onRemoveProject(e.uri)})),o.forEach((e=>{eventResponse.onAddProject(e.uri)}))})))})),connection.onDidChangeConfiguration((e=>{})),documents.onDidChangeContent((e=>{const o=e.document.uri;(0,documentContext_1.getRootFolders)(o,workspaceFolders).forEach((e=>{eventResponse.onDidChangeContent(e.uri,o)}))})),documents.onDidClose((e=>{const o=e.document.uri;(0,documentContext_1.getRootFolders)(o,workspaceFolders).forEach((e=>{eventResponse.onDidClose(e.uri,o)}))})),function(e){e[e.Undefined=1]="Undefined",e[e.File=2]="File",e[e.Folder=3]="Folder"}(UriType||(UriType={})),connection.onDidChangeWatchedFiles((e=>{e.changes.forEach((e=>{const o=(0,core_1.noTsToNormalizedUri)(e.uri);if(!o)return void console.error("[IndexServer] onDidChangeWatchedFiles uri is null, uri: ",e.uri);(0,documentContext_1.getRootFolders)(o,workspaceFolders).forEach((n=>{if(e.type===node_1.FileChangeType.Deleted)return void eventResponse.onWatchedDelete(n.uri,o,e.type);let r=getUriType(o);r===UriType.File?eventResponse.onWatchedFileChange(n.uri,o,e.type):r===UriType.Folder&&eventResponse.onWatchedFolderChange(n.uri,o,e.type)}))}))})),connection.onRequest(core_1.RebuildProjectIndexRequest.type,(async e=>{const o={isSuccess:!1,errorMessage:""},n=vscode_uri_1.URI.parse(e.folderUri),r=n.toString();if(!workspaceFolders.find((e=>e.uri===r))){const e=localize("indexservice.onRequest.rebuild.pathMismatch.error","项目路径不匹配! 路径: [{0}]",n.fsPath);return o.errorMessage=e,o}let t=!1;try{t=await eventResponse.onRebuildIndex(r)}catch(e){const n=localize("indexservice.onRequest.rebuild.doRebuild.error","重建索引出错! 错误: [{0}]",e.message);return o.errorMessage=n,o}return o.isSuccess=t,o})),connection.onRequest(core_1.GetIndexDataRequest.type,(async e=>{const o=await eventResponse.onQuery(e,!1);if(!o)return[];return(0,indexUtils_1.resultConversion)(o)})),connection.onNotification(core_1.EditorActivatedNotify.type,(e=>{const o=(0,documentContext_1.getRootFolders)(e,workspaceFolders)[0].uri;eventResponse.onEditorActivatedNotify(o,e)})),process.on("uncaughtException",(e=>{try{processId&&(process.kill(processId,0),console.error(`[IndexServer] UncaughtException! ERROR: ${JSON.stringify(e)}`))}catch(e){}})),process.on("unhandledRejection",((e,o)=>{try{processId&&(process.kill(processId,0),console.error(`[IndexServer] Unhandled Rejection at:', ${o}, 'reason:', ${e}`))}catch(e){}})),documents.listen(connection),connection.listen();