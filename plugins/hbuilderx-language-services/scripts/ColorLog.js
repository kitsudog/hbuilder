const chalk=require("chalk"),os=require("os");function parseOptions(e){let o="",n="";return e.needWrap&&(o=os.EOL),e.needTime&&(n=`${chalk.blueBright("[Time]: "+chalk.gray(`${(new Date).toLocaleString("en-US",{timeZone:"Asia/Shanghai"})}`))} `),{eol:o,timeData:n}}function errorLog(e,o,n={needTime:!0,needWrap:!0}){const a=parseOptions(n);console.log(a.timeData+`${chalk.blueBright(`[${e}]: `+chalk.red(`${o}`))}${a.eol}`)}function infoLog(e,o,n={needTime:!0,needWrap:!0}){const a=parseOptions(n);console.log(a.timeData+`${chalk.blueBright(`[${e}]: `+chalk.blue(`${o}`))}${a.eol}`)}function warnLog(e,o,n={needTime:!0,needWrap:!0}){const a=parseOptions(n);console.log(a.timeData+`${chalk.blueBright(`[${e}]: `+chalk.yellow(`${o}`))}${a.eol}`)}function successLog(e,o,n={needTime:!0,needWrap:!0}){const a=parseOptions(n);console.log(a.timeData+`${chalk.blueBright(`[${e}]: `+chalk.green(`${o}`))}${a.eol}`)}function hexLog(e,o,n,a={needTime:!0,needWrap:!0}){const l=parseOptions(a);console.log(`${chalk.blueBright(`[${o}]: `+chalk.hex(e)(`${n}`))}${l}`)}module.exports={errorLog:errorLog,infoLog:infoLog,warnLog:warnLog,successLog:successLog,hexLog:hexLog};