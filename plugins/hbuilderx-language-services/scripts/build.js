const fs=require("fs-extra"),path=require("path"),execa=require("execa"),colorLog=require("./ColorLog.js"),HtmlDataMarge=require("./HtmlDataMarge.js");async function buildTsServerWrapper(){colorLog.warnLog("TsServerWrapper","Compiled Start!");const e=path.join(__dirname,"../tsserverWrapper/tsconfig.json");try{await execa("tsc",["-p",e])}catch(e){colorLog.errorLog("TsServerWrapper","Compiled Failed!"),console.error(e.stdout),process.exit(-1)}colorLog.warnLog("TsServerWrapper","Compiled End!")}function copyWrapper(){const e=[".js"];colorLog.warnLog("WrapperCopyFile","Wrapper Copy Start!"),["nodeserver","sessionFunction"].forEach((r=>{e.forEach((e=>{const o=path.join(__dirname,`../tsserverWrapper/out/${r}${e}`),a=path.join(__dirname,`../node_modules/typescript/lib/${r}${e}`);fs.copyFileSync(o,a)}))})),colorLog.warnLog("WrapperCopyFile","Wrapper Copy End!")}function copyPackages(){const e=[".js",".d.ts"];colorLog.warnLog("WrapperCopyFile","Packages Copy Start!"),["beautify-css","beautify-html"].forEach((r=>{e.forEach((e=>{const o=path.join(__dirname,`../packages/vscode-html-languageservice/src/beautify/${r}${e}`),a=path.join(__dirname,`../packages/vscode-html-languageservice/out/beautify/${r}${e}`);fs.copyFileSync(o,a)}))})),colorLog.warnLog("WrapperCopyFile","Packages Copy End!")}async function buildTsServer(){colorLog.warnLog("BuildTsServer","Compiled Start!");try{const e=["-b","--listEmittedFiles","--verbose"];await execa("tsc",e,{stdio:"inherit",cwd:path.dirname(__dirname)})}catch(e){colorLog.errorLog("BuildTsServer","Compiled Failed!"),process.exit(-1)}colorLog.warnLog("BuildTsServer","Compiled End!"),colorLog.successLog("Build","All File Compiled Successfully!")}async function run(){HtmlDataMarge.createMargeData(),await buildTsServer(),copyPackages()}run();