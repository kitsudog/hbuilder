"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var i=Object.getOwnPropertyDescriptor(t,s);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,i)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&__createBinding(t,e,s);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.JSONSchemaService=exports.ResolvedSchema=exports.UnresolvedSchema=void 0;const Json=__importStar(require("jsonc-parser")),vscode_uri_1=require("vscode-uri"),Parser=__importStar(require("../parser/jsonParser")),Strings=__importStar(require("../utils/strings")),minimatch_1=require("minimatch"),nls=__importStar(require("vscode-nls")),localize=nls.loadMessageBundle(),BANG="!",PATH_SEP="/";class FilePatternAssociation{constructor(e,t){this.minimatchWrappers=[];try{for(let t of e){const e="!"!==t[0];e||(t=t.substring(1)),t.length>0&&("/"===t[0]&&(t=t.substring(1)),this.minimatchWrappers.push({minimatch:new minimatch_1.Minimatch(`**/${t}`),include:e}))}this.uris=t}catch(e){this.minimatchWrappers.length=0,this.uris=[]}}matchesPattern(e){let t=!1;for(const{minimatch:s,include:r}of this.minimatchWrappers)s.match(e)&&(t=r);return t}getURIs(){return this.uris}}class SchemaHandle{constructor(e,t,s){this.service=e,this.url=t,this.dependencies={},s&&(this.unresolvedSchema=this.service.promise.resolve(new UnresolvedSchema(s)))}getUnresolvedSchema(){return this.unresolvedSchema||(this.unresolvedSchema=this.service.loadSchema(this.url)),this.unresolvedSchema}getResolvedSchema(){return this.resolvedSchema||(this.resolvedSchema=this.getUnresolvedSchema().then((e=>this.service.resolveSchemaContent(e,this.url,this.dependencies)))),this.resolvedSchema}clearSchema(){this.resolvedSchema=void 0,this.unresolvedSchema=void 0,this.dependencies={}}}class UnresolvedSchema{constructor(e,t=[]){this.schema=e,this.errors=t}}exports.UnresolvedSchema=UnresolvedSchema;class ResolvedSchema{constructor(e,t=[]){this.schema=e,this.errors=t}getSection(e){const t=this.getSectionRecursive(e,this.schema);if(t)return Parser.asSchema(t)}getSectionRecursive(e,t){if(!t||"boolean"==typeof t||0===e.length)return t;const s=e.shift();if(t.properties&&(t.properties[s],1))return this.getSectionRecursive(e,t.properties[s]);if(t.patternProperties)for(const r of Object.keys(t.patternProperties)){if(Strings.extendedRegExp(r).test(s))return this.getSectionRecursive(e,t.patternProperties[r])}else{if("object"==typeof t.additionalProperties)return this.getSectionRecursive(e,t.additionalProperties);if(s.match("[0-9]+"))if(Array.isArray(t.items)){const r=parseInt(s,10);if(!isNaN(r)&&t.items[r])return this.getSectionRecursive(e,t.items[r])}else if(t.items)return this.getSectionRecursive(e,t.items)}}}exports.ResolvedSchema=ResolvedSchema;class JSONSchemaService{constructor(e,t,s){this.contextService=t,this.requestService=e,this.promiseConstructor=s||Promise,this.callOnDispose=[],this.contributionSchemas={},this.contributionAssociations=[],this.schemasById={},this.filePatternAssociations=[],this.registeredSchemasIds={}}getRegisteredSchemaIds(e){return Object.keys(this.registeredSchemasIds).filter((t=>{const s=vscode_uri_1.URI.parse(t).scheme;return"schemaservice"!==s&&(!e||e(s))}))}get promise(){return this.promiseConstructor}dispose(){for(;this.callOnDispose.length>0;)this.callOnDispose.pop()()}onResourceChange(e){let t=!1;const s=[e=normalizeId(e)],r=Object.keys(this.schemasById).map((e=>this.schemasById[e]));for(;s.length;){const e=s.pop();for(let i=0;i<r.length;i++){const o=r[i];o&&(o.url===e||o.dependencies[e])&&(o.url!==e&&s.push(o.url),o.clearSchema(),r[i]=void 0,t=!0)}}return t}setSchemaContributions(e){if(e.schemas){const t=e.schemas;for(const e in t){const s=normalizeId(e);this.contributionSchemas[s]=this.addSchemaHandle(s,t[e])}}if(Array.isArray(e.schemaAssociations)){const t=e.schemaAssociations;for(let e of t){const t=e.uris.map(normalizeId),s=this.addFilePatternAssociation(e.pattern,t);this.contributionAssociations.push(s)}}}addSchemaHandle(e,t){const s=new SchemaHandle(this,e,t);return this.schemasById[e]=s,s}getOrAddSchemaHandle(e,t){return this.schemasById[e]||this.addSchemaHandle(e,t)}addFilePatternAssociation(e,t){const s=new FilePatternAssociation(e,t);return this.filePatternAssociations.push(s),s}registerExternalSchema(e,t,s){const r=normalizeId(e);return this.registeredSchemasIds[r]=!0,this.cachedSchemaForResource=void 0,t&&this.addFilePatternAssociation(t,[e]),s?this.addSchemaHandle(r,s):this.getOrAddSchemaHandle(r)}clearExternalSchemas(){this.schemasById={},this.filePatternAssociations=[],this.registeredSchemasIds={},this.cachedSchemaForResource=void 0;for(const e in this.contributionSchemas)this.schemasById[e]=this.contributionSchemas[e],this.registeredSchemasIds[e]=!0;for(const e of this.contributionAssociations)this.filePatternAssociations.push(e)}getResolvedSchema(e){const t=normalizeId(e),s=this.schemasById[t];return s?s.getResolvedSchema():this.promise.resolve(void 0)}loadSchema(e){if(!this.requestService){const t=localize("json.schema.norequestservice","Unable to load schema from '{0}'. No schema request service available",toDisplayString(e));return this.promise.resolve(new UnresolvedSchema({},[t]))}return this.requestService(e).then((t=>{if(!t){const t=localize("json.schema.nocontent","Unable to load schema from '{0}': No content.",toDisplayString(e));return new UnresolvedSchema({},[t])}let s={};const r=[];s=Json.parse(t,r);const i=r.length?[localize("json.schema.invalidFormat","Unable to parse content from '{0}': Parse error at offset {1}.",toDisplayString(e),r[0].offset)]:[];return new UnresolvedSchema(s,i)}),(t=>{let s=t.toString();const r=t.toString().split("Error: ");return r.length>1&&(s=r[1]),Strings.endsWith(s,".")&&(s=s.substr(0,s.length-1)),new UnresolvedSchema({},[localize("json.schema.nocontent","Unable to load schema from '{0}': {1}.",toDisplayString(e),s)])}))}resolveSchemaContent(e,t,s){const r=e.errors.slice(0),i=e.schema;if(i.$schema){const e=normalizeId(i.$schema);if("http://json-schema.org/draft-03/schema"===e)return this.promise.resolve(new ResolvedSchema({},[localize("json.schema.draft03.notsupported","Draft-03 schemas are not supported.")]));"https://json-schema.org/draft/2019-09/schema"===e&&r.push(localize("json.schema.draft201909.notsupported","Draft 2019-09 schemas are not yet fully supported."))}const o=this.contextService,n=(e,t,s,i)=>{const o=i?decodeURIComponent(i):void 0,n=((e,t)=>{if(!t)return e;let s=e;return"/"===t[0]&&(t=t.substr(1)),t.split("/").some((e=>(e=e.replace(/~1/g,"/").replace(/~0/g,"~"),s=s[e],!s))),s})(t,o);if(n)for(const t in n)n.hasOwnProperty(t)&&!e.hasOwnProperty(t)&&(e[t]=n[t]);else r.push(localize("json.schema.invalidref","$ref '{0}' in '{1}' can not be resolved.",o,s))},c=(e,t,s,i,c)=>{o&&!/^\w+:\/\/.*/.test(t)&&(t=o.resolveRelativePath(t,i)),t=normalizeId(t);const h=this.getOrAddSchemaHandle(t);return h.getUnresolvedSchema().then((i=>{if(c[t]=!0,i.errors.length){const e=s?t+"#"+s:t;r.push(localize("json.schema.problemloadingref","Problems loading reference '{0}': {1}",e,i.errors[0]))}return n(e,i.schema,t,s),a(e,i.schema,t,h.dependencies)}))},a=(e,t,s,r)=>{if(!e||"object"!=typeof e)return Promise.resolve(null);const i=[e],o=[],a=[],h=e=>{const o=[];for(;e.$ref;){const i=e.$ref,h=i.split("#",2);if(delete e.$ref,h[0].length>0)return void a.push(c(e,h[0],h[1],s,r));-1===o.indexOf(i)&&(n(e,t,s,h[1]),o.push(i))}((...e)=>{for(const t of e)"object"==typeof t&&i.push(t)})(e.items,e.additionalItems,e.additionalProperties,e.not,e.contains,e.propertyNames,e.if,e.then,e.else),((...e)=>{for(const t of e)if("object"==typeof t)for(const e in t){const s=t[e];"object"==typeof s&&i.push(s)}})(e.definitions,e.properties,e.patternProperties,e.dependencies),((...e)=>{for(const t of e)if(Array.isArray(t))for(const e of t)"object"==typeof e&&i.push(e)})(e.anyOf,e.allOf,e.oneOf,e.items)};for(;i.length;){const e=i.pop();o.indexOf(e)>=0||(o.push(e),h(e))}return this.promise.all(a)};return a(i,i,t,s).then((e=>new ResolvedSchema(i,r)))}getSchemaForResource(e,t){if(t&&t.root&&"object"===t.root.type){const s=t.root.properties.filter((e=>"$schema"===e.keyNode.value&&e.valueNode&&"string"===e.valueNode.type));if(s.length>0){const t=s[0].valueNode;if(t&&"string"===t.type){let s=Parser.getNodeValue(t);if(s&&Strings.startsWith(s,".")&&this.contextService&&(s=this.contextService.resolveRelativePath(s,e)),s){const e=normalizeId(s);return this.getOrAddSchemaHandle(e).getResolvedSchema()}}}}if(this.cachedSchemaForResource&&this.cachedSchemaForResource.resource===e)return this.cachedSchemaForResource.resolvedSchema;const s=Object.create(null),r=[],i=normalizeResourceForMatching(e);for(const e of this.filePatternAssociations)if(e.matchesPattern(i))for(const t of e.getURIs())s[t]||(r.push(t),s[t]=!0);const o=r.length>0?this.createCombinedSchema(e,r).getResolvedSchema():this.promise.resolve(void 0);return this.cachedSchemaForResource={resource:e,resolvedSchema:o},o}createCombinedSchema(e,t){if(1===t.length)return this.getOrAddSchemaHandle(t[0]);{const s="schemaservice://combinedSchema/"+encodeURIComponent(e),r={allOf:t.map((e=>({$ref:e})))};return this.addSchemaHandle(s,r)}}getMatchingSchemas(e,t,s){if(s){const e=s.id||"schemaservice://untitled/matchingSchemas/"+idCounter++;return this.resolveSchemaContent(new UnresolvedSchema(s),e,{}).then((e=>t.getMatchingSchemas(e.schema).filter((e=>!e.inverted))))}return this.getSchemaForResource(e.uri,t).then((e=>e?t.getMatchingSchemas(e.schema).filter((e=>!e.inverted)):[]))}getMatchingSchemas2(e,t){return this.getSchemaForResource(e.uri,t).then((e=>[]))}}exports.JSONSchemaService=JSONSchemaService;let idCounter=0;function normalizeId(e){try{return vscode_uri_1.URI.parse(e).toString()}catch(t){return e}}function normalizeResourceForMatching(e){try{return vscode_uri_1.URI.parse(e).with({fragment:null,query:null}).toString()}catch(t){return e}}function toDisplayString(e){try{const t=vscode_uri_1.URI.parse(e);if("file"===t.scheme)return t.fsPath}catch(e){}return e}