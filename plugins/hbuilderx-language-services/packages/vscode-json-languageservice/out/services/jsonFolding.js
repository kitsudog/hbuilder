"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getFoldingRanges=void 0;const jsonc_parser_1=require("jsonc-parser"),jsonLanguageTypes_1=require("../jsonLanguageTypes");function getFoldingRanges(e,n){const t=[],s=[],o=[];let i=-1;const g=(0,jsonc_parser_1.createScanner)(e.getText(),!1);let a=g.scan();function r(e){t.push(e),s.push(o.length)}for(;17!==a;){switch(a){case 1:case 3:{const n=e.positionAt(g.getTokenOffset()).line,t={startLine:n,endLine:n,kind:1===a?"object":"array"};o.push(t);break}case 2:case 4:{const n=2===a?"object":"array";if(o.length>0&&o[o.length-1].kind===n){const n=o.pop(),t=e.positionAt(g.getTokenOffset()).line;n&&t>n.startLine+1&&i!==n.startLine&&(n.endLine=t-1,r(n),i=n.startLine)}break}case 13:{const n=e.positionAt(g.getTokenOffset()).line,t=e.positionAt(g.getTokenOffset()+g.getTokenLength()).line;1===g.getTokenError()&&n+1<e.lineCount?g.setPosition(e.offsetAt(jsonLanguageTypes_1.Position.create(n+1,0))):n<t&&(r({startLine:n,endLine:t,kind:jsonLanguageTypes_1.FoldingRangeKind.Comment}),i=n);break}case 12:{const n=e.getText().substr(g.getTokenOffset(),g.getTokenLength()).match(/^\/\/\s*#(region\b)|(endregion\b)/);if(n){const t=e.positionAt(g.getTokenOffset()).line;if(n[1]){const e={startLine:t,endLine:t,kind:jsonLanguageTypes_1.FoldingRangeKind.Region};o.push(e)}else{let e=o.length-1;for(;e>=0&&o[e].kind!==jsonLanguageTypes_1.FoldingRangeKind.Region;)e--;if(e>=0){const n=o[e];o.length=e,t>n.startLine&&i!==n.startLine&&(n.endLine=t,r(n),i=n.startLine)}}}break}}a=g.scan()}const c=n&&n.rangeLimit;if("number"!=typeof c||t.length<=c)return t;n&&n.onRangeLimitExceeded&&n.onRangeLimitExceeded(e.uri);const f=[];for(let e of s)e<30&&(f[e]=(f[e]||0)+1);let l=0,d=0;for(let e=0;e<f.length;e++){const n=f[e];if(n){if(n+l>c){d=e;break}l+=n}}const p=[];for(let e=0;e<t.length;e++){const n=s[e];"number"==typeof n&&(n<d||n===d&&l++<c)&&p.push(t[e])}return p}exports.getFoldingRanges=getFoldingRanges;