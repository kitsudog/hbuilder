"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HTMLFolding=void 0;const htmlLanguageTypes_1=require("../htmlLanguageTypes"),htmlScanner_1=require("../parser/htmlScanner");class HTMLFolding{constructor(e){this.dataManager=e}limitRanges(e,t){let n;e=e.sort(((e,t)=>{let n=e.startLine-t.startLine;return 0===n&&(n=e.endLine-t.endLine),n}));const a=[],s=[],i=[],g=(e,t)=>{s[e]=t,t<30&&(i[t]=(i[t]||0)+1)};for(let t=0;t<e.length;t++){const s=e[t];if(n){if(s.startLine>n.startLine)if(s.endLine<=n.endLine)a.push(n),n=s,g(t,a.length);else if(s.startLine>n.endLine){do{n=a.pop()}while(n&&s.startLine>n.endLine);n&&a.push(n),n=s,g(t,a.length)}}else n=s,g(t,0)}let o=0,l=0;for(let e=0;e<i.length;e++){const n=i[e];if(n){if(n+o>t){l=e;break}o+=n}}const r=[];for(let n=0;n<e.length;n++){const a=s[n];"number"==typeof a&&(a<l||a===l&&o++<t)&&r.push(e[n])}return r}getFoldingRanges(e,t){const n=this.dataManager.getVoidElements(e.languageId),a=(0,htmlScanner_1.createScanner)(e.getText());let s=a.scan();const i=[],g=[];let o=null,l=-1;function r(e){i.push(e),l=e.startLine}for(;s!==htmlLanguageTypes_1.TokenType.EOS;){switch(s){case htmlLanguageTypes_1.TokenType.StartTag:{const t=a.getTokenText(),n=e.positionAt(a.getTokenOffset()).line;g.push({startLine:n,tagName:t}),o=t;break}case htmlLanguageTypes_1.TokenType.EndTag:o=a.getTokenText();break;case htmlLanguageTypes_1.TokenType.StartTagClose:if(!o||!this.dataManager.isVoidElement(o,n))break;case htmlLanguageTypes_1.TokenType.EndTagClose:case htmlLanguageTypes_1.TokenType.StartTagSelfClose:{let t=g.length-1;for(;t>=0&&g[t].tagName!==o;)t--;if(t>=0){const n=g[t];g.length=t;const s=e.positionAt(a.getTokenOffset()).line,i=n.startLine,o=s-1;o>i&&l!==i&&r({startLine:i,endLine:o})}break}case htmlLanguageTypes_1.TokenType.Comment:{let t=e.positionAt(a.getTokenOffset()).line;const n=a.getTokenText().match(/^\s*#(region\b)|(endregion\b)/);if(n)if(n[1])g.push({startLine:t,tagName:""});else{let e=g.length-1;for(;e>=0&&g[e].tagName.length;)e--;if(e>=0){const n=g[e];g.length=e;const a=t;t=n.startLine,a>t&&l!==t&&r({startLine:t,endLine:a,kind:htmlLanguageTypes_1.FoldingRangeKind.Region})}}else{const n=e.positionAt(a.getTokenOffset()+a.getTokenLength()).line;t<n&&r({startLine:t,endLine:n,kind:htmlLanguageTypes_1.FoldingRangeKind.Comment})}break}}s=a.scan()}const T=t&&t.rangeLimit||Number.MAX_VALUE;return i.length>T?this.limitRanges(i,T):i}}exports.HTMLFolding=HTMLFolding;