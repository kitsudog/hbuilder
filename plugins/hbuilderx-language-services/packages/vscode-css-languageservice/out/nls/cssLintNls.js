"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.localize=void 0;const core_1=require("../../../../core");function isZH_CN(){try{if(process.env.VSCODE_NLS_CONFIG)return"zh_CN"===JSON.parse(process.env.VSCODE_NLS_CONFIG).locale}catch(e){console.error(null==e?void 0:e.stack)}return!0}const isCN=isZH_CN();class CssLintNls{constructor(){this.nlsMap=new Map}localize(e,...s){let a=this.nlsMap.get(e)||(null==s?void 0:s[0])||e;if(a){(0,core_1.matchAll)(a,/({(\d)})/g).forEach((e=>{a=a.replace(e[0],s[e[2]])}))}return a}addGlossary(e,s,a){this.nlsMap.set(e,isCN?s:a)}}let instance=new CssLintNls;instance.addGlossary("property.unknownproperty.detailed","不支持的属性: '{0}'","Unsupported property: '{0}'"),instance.addGlossary("customRule.unSupportPropertyValue","不支持的属性值: '{0}'","Unsupported attribute value: '{0}'"),instance.addGlossary("customRule.unknownFunction.detailed","不支持的函数: '{0}'","Unsupported function: '{0}'"),instance.addGlossary("customRule.unknownUnit.detailed","不支持的单位: '{0}'","Unsupported unit: '{0}'"),instance.addGlossary("customRule.unSupportSelector","不支持{0}选择器","Unsupported {0} selector"),instance.addGlossary("customRule.className","类名","Class name"),instance.addGlossary("customRule.wildcard","通配符","Wildcard"),instance.addGlossary("customRule.element","元素","Element"),instance.addGlossary("customRule.property","属性","Property"),instance.addGlossary("customRule.pseudo-element","伪元素","Pseudo-element"),instance.addGlossary("customRule.pseudo-class","伪类","Pseudo-class"),instance.addGlossary("customRule.group","分组","group"),instance.addGlossary("customRule.children","后代","children"),instance.addGlossary("customRule.shadowPiercingDescendant","直接子代","shadow piercing descendant"),instance.addGlossary("customRule.siblings","紧邻兄弟","siblings"),instance.addGlossary("customRule.allSiblings","一般兄弟","all siblings"),instance.addGlossary("namelist.single","'{0}'","'{0}'"),instance.addGlossary("namelist.concatenated","{0}, '{1}'","{0}, '{1}'"),instance.addGlossary("property.standard.missing","为了兼容性，还要定义标准属性 '{0}'","Also define the standard property '{0}' for compatibility"),instance.addGlossary("property.vendorspecific.missing","始终包含所有供应商特定的属性: 缺少: {0}","Always include all vendor specific properties: Missing: {0}"),instance.addGlossary("keyframes.standardrule.missing","在定义关键帧时，始终要定义标准规则 '@keyframes'。","Always define standard rule '@keyframes' when defining keyframes."),instance.addGlossary("keyframes.vendorspecific.missing","始终包含所有供应商特定的规则: 缺少: {0}","Always include all vendor specific rules: Missing: {0}"),instance.addGlossary("customRule.undefinedId","项目模板中未定义该id","The ID selector name not defined in the project template."),instance.addGlossary("customRule.unSupportAtrule","不支持的@规则: {0}","The @rule is not supported: {0}"),instance.addGlossary("rule.vendorprefixes.all","当使用供应商特定的前缀时，请确保还包括所有其他供应商特定属性","When using a vendor-specific prefix make sure to also include all other vendor-specific properties"),instance.addGlossary("rule.standardvendorprefix.all","当使用供应商特定前缀时，也包括标准属性","When using a vendor-specific prefix also include the standard property"),instance.addGlossary("rule.duplicateDeclarations","不要使用重复的样式定义","Do not use duplicate style definitions"),instance.addGlossary("rule.emptyRuleSets","不要使用空规则集","Do not use empty rulesets"),instance.addGlossary("rule.importDirective","导入语句不同时加载","Import statements do not load in parallel"),instance.addGlossary("rule.bewareOfBoxModelSize","使用 padding 或 border 时不要使用 width 或 height","Do not use width or height when using padding or border"),instance.addGlossary("rule.universalSelector","已知通用选择器 (*) 速度较慢","The universal selector (*) is known to be slow"),instance.addGlossary("rule.zeroWidthUnit","零不需要单位","No unit for zero needed"),instance.addGlossary("rule.fontFaceProperties","@font-face 规则必须定义 'src' 和 'font-family' 属性","@font-face rule must define 'src' and 'font-family' properties"),instance.addGlossary("rule.hexColor","十六进制颜色必须由三、四、六或八个十六进制数字组成","Hex colors must consist of three, four, six or eight hex numbers"),instance.addGlossary("rule.colorFunction","参数数量无效","Invalid number of parameters"),instance.addGlossary("rule.ieHack","仅在支持 IE7 及更早版本时才需要 IE 修补","IE hacks are only necessary when supporting IE7 and older"),instance.addGlossary("rule.unknownVendorSpecificProperty","未知供应商特定属性","Unknown vendor specific property."),instance.addGlossary("rule.propertyIgnoredDueToDisplay","由于显示原因，属性被忽略","Property is ignored due to the display."),instance.addGlossary("rule.avoidImportant","避免使用 !important。这表明整个 CSS 的特异性已经失控，需要重构","Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."),instance.addGlossary("rule.avoidFloat","避免使用“float”。浮动导致脆弱的 CSS，如果布局的一个方面发生变化，很容易被破坏","Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."),instance.addGlossary("rule.avoidIdSelector","选择器不应包含 ID，因为这些规则与 HTML 过于紧密耦合","Selectors should not contain IDs because these rules are too tightly coupled with the HTML."),instance.addGlossary("rule.unknownExpression","未知Expression","UnknownExpression"),instance.addGlossary("rule.propertyIgnoredDueToDisplayInlineBlock","由于浮动，'inline-block'被忽略。如果'float'的值不为'none'，则框被浮动，'display'被视为'block'。","Property is ignored due to the display. With 'display: block', vertical-align should not be used."),instance.addGlossary("rule.propertyIgnoredDueToDisplayBlock","由于显示方式为'block'，无视该属性。在使用'display: block'时，不应使用'vertical-align'。","Property is ignored due to the display. With 'display: block', vertical-align should not be used."),instance.addGlossary("expected.number","预期为数字","number expected"),instance.addGlossary("expected.condt","预期为条件","condition expected"),instance.addGlossary("expected.ruleorselector","预期为规则或选择器","rule or selector expected"),instance.addGlossary("expected.dot","预期为点号","dot expected"),instance.addGlossary("expected.colon","预期为冒号","colon expected"),instance.addGlossary("expected.semicolon","预期为分号","semi-colon expected"),instance.addGlossary("expected.term","预期为术语","term expected"),instance.addGlossary("expected.expression","预期为表达式","expression expected"),instance.addGlossary("expected.operator","预期为操作符","operator expected"),instance.addGlossary("expected.ident","预期为标识符","identifier expected"),instance.addGlossary("expected.percentage","预期为百分比","percentage expected"),instance.addGlossary("expected.uriorstring","预期为URI或字符串","URI or string expected"),instance.addGlossary("expected.uri","预期为URI","URI expected"),instance.addGlossary("expected.varname","预期为变量名","variable name expected"),instance.addGlossary("expected.varvalue","预期为变量值","variable value expected"),instance.addGlossary("expected.propvalue","预期为属性值","property value expected"),instance.addGlossary("expected.lcurly","预期为 {","{ expected"),instance.addGlossary("expected.rcurly","预期为 }","} expected"),instance.addGlossary("expected.lsquare","预期为 [","[  expected"),instance.addGlossary("expected.rsquare","预期为 ]","] expected"),instance.addGlossary("expected.lparen","预期为 (","( expected"),instance.addGlossary("expected.rparent","预期为 )",") expected"),instance.addGlossary("expected.comma","预期为逗号","comma expected"),instance.addGlossary("expected.pagedirordecl","预期为页面指令或声明","page directive or declaration expected"),instance.addGlossary("unknown.atrule","未知的At规则","unknown at-rule"),instance.addGlossary("unknown.keyword","未知的关键词","unknown keyword"),instance.addGlossary("expected.selector","预期为选择器","selector expected"),instance.addGlossary("expected.stringliteral","预期为字符串字面量","string literal expected"),instance.addGlossary("expected.whitespace","预期为空格","whitespace expected"),instance.addGlossary("expected.mediaquery","预期为媒体查询","media query expected"),instance.addGlossary("expected.idorwildcard","预期为标识符或通配符","identifier or wildcard expected"),instance.addGlossary("expected.wildcard","预期为通配符","wildcard expected"),instance.addGlossary("expected.idorvar","预期为标识符或变量","identifier or variable expected"),instance.addGlossary("expected.from","预期为'from'","'from' expected"),instance.addGlossary("expected.through","预期为'through'或'to'","'through' or 'to' expected"),instance.addGlossary("expected.in","预期为'in'","'in' expected"),exports.localize=instance.localize.bind(instance);