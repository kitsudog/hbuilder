"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,n){void 0===n&&(n=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,n,s)}:function(e,t,i,n){void 0===n&&(n=i),e[n]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStyleSyntacticDiagnostics=exports.CSSValidation=void 0;const nodes=__importStar(require("../parser/cssNodes")),lintRules_1=require("./lintRules"),lint_1=require("./lint"),cssLanguageTypes_1=require("../cssLanguageTypes"),cssLintNls_1=require("../nls/cssLintNls"),core_1=require("../../../../core");class CSSValidation{constructor(e){this.cssDataManager=e,this.tool=core_1.SyntacticDiagnosticsTool.getInstance()}configure(e){this.settings=e}async doValidation(e,t,i){if(this.tool=core_1.SyntacticDiagnosticsTool.getInstance(),i&&!1===i.validate)return[];let{entrieRes:n,selectors:s}=lint_1.LintVisitor.entries(t,e,new lintRules_1.LintConfigurationSettings(i&&i.lint),this.cssDataManager);const a=[];a.push.apply(a,nodes.ParseErrorCollector.entries(t)),a.push.apply(a,n);let r=await this.tool.getIDIndexData();if(r){let e=[];for(let t=0;t<s.length;t++){let{node:i,nodeValue:n}=s[t];r.has(n)||e.push(new nodes.Marker(i,lintRules_1.Rules.UndefinedIdOrClassName,lintRules_1.Rules.UndefinedIdOrClassName.defaultValue,(0,cssLintNls_1.localize)("customRule.undefinedId")))}a.push.apply(a,e)}return a.filter((e=>e.getLevel()!==nodes.Level.Ignore)).map((function(t){const i=cssLanguageTypes_1.Range.create(e.positionAt(t.getOffset()),e.positionAt(t.getOffset()+t.getLength())),n=e.languageId;return{code:t.getRule().id,source:n,message:t.getMessage(),severity:t.getLevel()===nodes.Level.Warning?cssLanguageTypes_1.DiagnosticSeverity.Warning:cssLanguageTypes_1.DiagnosticSeverity.Error,range:i}}))}}async function getStyleSyntacticDiagnostics(e,t,i,n,s){if(!(0,core_1.getConfigurationValue)(e.tsinfo.project.projectService.getHostPreferences(),"css.validate.enable",!0))return[];core_1.SyntacticDiagnosticsTool.createInstance(e,s);let a=await n.doValidation(t,i);return(0,core_1.fromLspDiagnosticWithLocation)(a,t)||[]}exports.CSSValidation=CSSValidation,exports.getStyleSyntacticDiagnostics=getStyleSyntacticDiagnostics;