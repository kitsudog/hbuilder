"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,r)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StyleExtCompletion=void 0;const nodes=__importStar(require("../parser/cssNodes")),cssLanguageExtTypes_1=require("./cssLanguageExtTypes"),extTokenHandler_1=require("./extTokenHandler");class StyleExtCompletion{constructor(e){this._tokenHandler=new extTokenHandler_1.ExtTokenHandler(e)}getNode(e,t){var n;const o=t.prevToken.token;if(!o)return;const r={node:void 0};let s=o.offset,a=o.len;if(o.type===cssLanguageExtTypes_1.TokenType.CurlyR)return(null===(n=t.currToken.token)||void 0===n?void 0:n.text.startsWith("@"))?(r.node=this._tokenHandler.create(nodes.AtApplyRule,s,a),r):(r.node=this._tokenHandler.create(nodes.SimpleSelector,s,a),r);if(o.type===cssLanguageExtTypes_1.TokenType.BracketL)return r.node=this._tokenHandler.create(nodes.AttributeSelector,s,a),r;if(o.type===cssLanguageExtTypes_1.TokenType.SemiColon||o.type===cssLanguageExtTypes_1.TokenType.CurlyL)return r.node=this._tokenHandler.create(nodes.Property,s,a),r;if(o.type===cssLanguageExtTypes_1.TokenType.Colon){const n=this._tokenHandler.getDataFromTokenList(e,t.prevToken.index,"prev",[cssLanguageExtTypes_1.TokenType.Ident],"whitelist");if(n&&n.token)return r.node=this._tokenHandler.create(nodes.Declarations,s,a),r.propertyName=n.token.text,r}}getNodeFromToken(e,t){let n;const o=e.offsetAt(t),r=this._tokenHandler.getAllTokenMap(e,o);if(!r)return n;const s=[cssLanguageExtTypes_1.TokenType.Whitespace,cssLanguageExtTypes_1.TokenType.Comment],a=this._tokenHandler.getContextToken(r,o,s);if(!a)return n;n=this.getNode(r,a);const i=this._tokenHandler.getScannerType();return n&&(n.scannerType=i),n}isErrorStyleSheet(e,t){const n=nodes.ParseErrorCollector.entries(t);for(const t of n){const n=t;if(n.offset+n.length<e)return!0}return!1}}exports.StyleExtCompletion=StyleExtCompletion;