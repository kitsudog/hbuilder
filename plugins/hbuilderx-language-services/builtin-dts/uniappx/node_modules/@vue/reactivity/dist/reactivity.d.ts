type TrackOrTriggerOpTypes = string;
type TrackOpTypes = TrackOrTriggerOpTypes;
export declare const TRACK_OP_TYPES_GET = "get";
export declare const TRACK_OP_TYPES_HAS = "has";
export declare const TRACK_OP_TYPES_ITERATE = "iterate";
type TriggerOpTypes = TrackOrTriggerOpTypes;
export declare const TRIGGER_OP_TYPES_SET = "set";
export declare const TRIGGER_OP_TYPES_ADD = "add";
export declare const TRIGGER_OP_TYPES_DELETE = "delete";
export declare const TRIGGER_OP_TYPES_CLEAR = "clear";

export declare class EffectScope {
    detached: boolean;
    /* removed internal: _active */
    /* removed internal: effects */
    /* removed internal: cleanups */
    /* removed internal: parent */
    /* removed internal: scopes */
    /* removed internal: index */
    constructor(detached?: boolean);
    get active(): boolean;
    run<T>(fn: () => T): T | null;
    /* removed internal: on */
    /* removed internal: off */
    stop(fromParent?: boolean | null): void;
}
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "x",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "x",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "x",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function effectScope(detached?: boolean): EffectScope;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "x",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "x",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "x",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function getCurrentScope(): EffectScope | null;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "x",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "x",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "x",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function onScopeDispose(fn: () => void): void;

export interface IUTSReactiveSkip {
    __v_skip: boolean;
}
export interface IUTSReactiveReadonly {
    __v_isReadonly: boolean;
}
export interface IUTSReactiveShallow {
    __v_isShallow: boolean;
}
/* removed internal: shallowReactive */
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function shallowReactive<T>(target: T): T;
/* removed internal: reactive */
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "√"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function reactive<T>(target: T): T;
/* removed internal: readonly */
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function readonly<T>(target: T): T;
/* removed internal: shallowReadonly */
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function shallowReadonly<T>(target: T): T;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function toRaw<T>(observed: any | null): T;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function isReactive(value: any | null): boolean;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function isReadonly(value: any | null): boolean;
export declare function isShallow(value: any | null): boolean;
export declare function isSkip(value: any | null): boolean;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function isProxy(value: any | null): boolean;

type ComputedGetter<T> = () => T;
type ComputedSetter<T> = (v: T) => void;
export type WritableComputedOptions<T> = {
    get: ComputedGetter<T>;
    set: ComputedSetter<T>;
};
declare class ComputedRefImpl<T> implements Ref<T>, IUTSReactiveReadonly {
    dep: Dep<T> | null;
    private _value;
    readonly effect: ReactiveEffect<T>;
    readonly __v_isRef = true;
    __v_isReadonly: boolean;
    _dirty: boolean;
    _cacheable: boolean;
    private readonly _setter;
    constructor(getter: ComputedGetter<T>, setter: ComputedSetter<T>, isReadonly?: boolean);
    get value(): T;
    set value(newValue: T);
}
export declare function computed<T>(getterOrOptions: ComputedGetter<T>): ComputedRefImpl<T>;
export declare function computed<T>(getterOrOptions: WritableComputedOptions<T>): ComputedRefImpl<T>;

export type EffectScheduler = () => void;
type DebuggerEventExtraInfo = {
    target: any;
    type: TrackOrTriggerOpTypes;
    key: any | null;
    newValue: any | null;
    oldValue: any | null;
    oldTarget: any | null;
};
export type DebuggerEvent = {
    effect: ReactiveEffect<any | null>;
    target: any;
    type: TrackOrTriggerOpTypes;
    key: any | null;
    newValue: any | null;
    oldValue: any | null;
    oldTarget: any | null;
};
export declare const ITERATE_KEY: string;
export declare const MAP_KEY_ITERATE_KEY: string;
export declare class ReactiveEffect<T> implements ReactiveEffectOptions {
    fn: () => T;
    scheduler: EffectScheduler | null;
    active: boolean;
    deps: Dep<T>[];
    parent: ReactiveEffect<T> | null;
    /* removed internal: computed */
    /* removed internal: allowRecurse */
    /* removed internal: deferStop */
    onStop: (() => void) | null;
    onTrack: ((event: DebuggerEvent) => void) | null;
    onTrigger: ((event: DebuggerEvent) => void) | null;
    lazy: boolean | null;
    scope: EffectScope | null;
    constructor(fn: () => T, scheduler?: EffectScheduler | null, scope?: EffectScope | null);
    private invokeFn;
    run: () => T | null;
    stop(): void;
}
export type DebuggerOptions = {
    onTrack?: ((event: DebuggerEvent) => void) | null;
    onTrigger?: ((event: DebuggerEvent) => void) | null;
};
interface ReactiveEffectOptions {
    lazy: boolean | null;
    scheduler: EffectScheduler | null;
    scope: EffectScope | null;
    allowRecurse: boolean | null;
    onStop: (() => void) | null;
    onTrack: ((event: DebuggerEvent) => void) | null;
    onTrigger: ((event: DebuggerEvent) => void) | null;
}
declare class ReactiveEffectRunner<T> {
    fn: () => T | null;
    effect: ReactiveEffect<T>;
    constructor(fn: () => T | null, effect: ReactiveEffect<T>);
    invoke(): T | null;
}
export declare function effect<T>(fn: () => T, options?: ReactiveEffectOptions | null): ReactiveEffectRunner<T>;
export declare function stop<T>(runner: ReactiveEffectRunner<T>): void;
export declare function pauseTracking(): void;
export declare function enableTracking(): void;
export declare function resetTracking(): void;
export declare function track(target: any, type: TrackOpTypes, key: any): void;
export declare function trackEffects<T>(dep: Dep<T>, debuggerEventExtraInfo?: DebuggerEventExtraInfo | null): void;
export declare function trigger(target: any, type: TriggerOpTypes, key?: any | null, newValue?: any | null, oldValue?: any | null, oldTarget?: any | null): void;

/**
 * wasTracked and newTracked maintain the status for several levels of effect
 * tracking recursion. One bit per level is used to define whether the dependency
 * was/is tracked.
 */
declare class TrackedMarkers<T> extends Set<T> {
    constructor(args?: T[]);
    /**
     * wasTracked
     */
    w: number;
    /**
     * newTracked
     */
    n: number;
}
export type Dep<T> = TrackedMarkers<ReactiveEffect<T>>;
export declare function createDep<T>(effects?: ReactiveEffect<T>[]): Dep<T>;
export declare function wasTracked<T>(dep: Dep<T>): boolean;
export declare function newTracked<T>(dep: Dep<T>): boolean;
export declare function initDepMarkers<T>(effect: ReactiveEffect<T>): void;
export declare function finalizeDepMarkers<T>(effect: ReactiveEffect<T>): void;

interface RefBase<T> {
    dep: Dep<T> | null;
    value: T;
}
export interface Ref<T> extends RefBase<T> {
}
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function isRef(r: any | null): boolean;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "x"
 *   }
 * }
 */
export declare function triggerRef<T>(ref: Ref<T>): void;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function unref<T>(ref: Ref<T>): T;
export declare function unref<T>(ref: T): T;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "4.11",
 *     "unixVer": "4.11"
 *   }
 * }
 */
export declare function toValue<T>(source: Ref<T>): T;
export declare function toValue<T>(source: () => T): T;
/* removed internal: setRefValue */
export declare function ref(value: number): Ref<number>;
export declare function ref(value: UTSJSONObject): Ref<UTSJSONObject>;
export declare function ref<T>(value: Ref<T>): Ref<T>;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "√"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function ref<T>(value: T): Ref<T>;
export declare function shallowRef(value: number): Ref<number>;
export declare function shallowRef(value: UTSJSONObject): Ref<UTSJSONObject>;
export declare function shallowRef<T>(value: Ref<T>): Ref<T>;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function shallowRef<T>(value: T): Ref<T>;
type CustomRefFactory<T> = (track: () => void, trigger: () => void) => UTSJSONObject;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *   }
 * }
 */
export declare function customRef<T>(factory: CustomRefFactory<T>): Ref<T>;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "4.11",
 *     "unixVer": "4.11"
 *   }
 * }
 */
export declare function toRefs<T>(object: Array<T>): Array<Ref<T>>;
export declare function toRefs<T extends UTSJSONObject>(object: T): UTSJSONObject;
/**
 * @uniPlatform {
 * "app": {
 *   "android": {
 *     "osVer": "5.0",
 *     "uniVer": "√",
 *     "unixVer": "4.0"
 *     },
 *     "ios": {
 *       "osVer": "10.0",
 *       "uniVer": "√",
 *       "unixVer": "4.11"
 *     }
 *   },
 *   "mp": {
 *     "weixin": {
 *         "hostVer": "8.0",
 *         "uniVer": "√",
 *         "unixVer": "x"
 *     }
 *   },
 *   "web": {
 *     "uniVer": "4.11",
 *     "unixVer": "4.11"
 *   }
 * }
 */
export declare function toRef<T extends Ref<T>>(source: T): Ref<T>;
export declare function toRef<T>(source: () => T): Ref<T>;
export declare function toRef<T>(source: IUTSObject, key: string): Ref<T>;
export declare function toRef<T>(source: IUTSObject, key: string, defaultValue: T): Ref<T>;

export declare class UTSReactiveMap<K, V> extends Map<K, V> implements IUTSReactive<Map<K, V>>, IJsonStringify {
    __v_raw: Map<K, V>;
    __v_isReadonly: boolean;
    __v_isShallow: boolean;
    __v_skip: boolean;
    constructor(raw: Map<K, V>, isReadonly?: boolean, shallow?: boolean, skip?: boolean);
    __v_clone(isReadonly: boolean, shallow: boolean, skip: boolean): UTSReactiveMap<K, V>;
    get size(): Int;
    get(key: K): V | null;
    put(key: K, value: V): V | null;
    has(key: K): boolean;
    delete(key: K): boolean;
    clear(): void;
    get keys(): MutableSet<K>;
    get entries(): MutableSet<MutableMap.MutableEntry<K, V>>;
    get values(): MutableCollection<V>;
}
export declare class UTSReactiveArray<T> extends UTSArray<T> implements IUTSReactive<Array<T>>, IJsonStringify {
    __v_raw: Array<T>;
    __v_isReadonly: boolean;
    __v_isShallow: boolean;
    __v_skip: boolean;
    constructor(raw: Array<T>, isReadonly?: boolean, shallow?: boolean, skip?: boolean);
    __v_clone(isReadonly: boolean, shallow: boolean, skip: boolean): UTSReactiveArray<T>;
    get size(): Int;
    get(index: Int): T;
    set(index: Int, element: T): T;
    indexOf(element: T): Int;
    lastIndexOf(element: T): Int;
    includes(element: T): boolean;
    push(...do_not_transform_spread: T[]): Int;
    addAll(items: Collection<T>): Boolean;
    pop(): T | null;
    shift(): T | null;
    unshift(...do_not_transform_spread: T[]): Int;
    splice(start: number): Array<T>;
    sort(): Array<T>;
    iterator(): MutableIterator<T>;
    listIterator(): MutableListIterator<T>;
    join(separator: string): string;
}
export declare class UTSReactiveJSONObject extends UTSJSONObject implements IUTSReactive<UTSJSONObject> {
    __v_raw: UTSJSONObject;
    __v_isReadonly: boolean;
    __v_isShallow: boolean;
    __v_skip: boolean;
    constructor(raw: UTSJSONObject, isReadonly: boolean, shallow: boolean, skip: boolean);
    __v_clone(isReadonly: boolean, shallow: boolean, skip: boolean): UTSReactiveJSONObject;
    get __$arrayContent(): JSONArray | null;
    set __$arrayContent(value: JSONArray | null);
    get dynamicJSONFields(): MutableMap<any, any | null>;
    toMap(): Map<string, any | null>;
    toJSONObject(): com.alibaba.fastjson.JSON;
    get(name: any): any | null;
    set(name: any, value: any | null): void;
    resolveKeyPath(key: string): any | null;
}
export declare abstract class UTSReactiveObject extends UTSObject implements IUTSReactiveReadonly, IUTSReactiveShallow {
    __v_isReadonly: boolean;
    __v_isShallow: boolean;
    constructor();
    abstract __v_create(__v_isReadonly: boolean, __v_isShallow: boolean, __v_skip: boolean): UTSReactiveObject;
    __v_canSet(key: string): boolean;
    get(name: any): any | null;
    set(name: any, value: any | null): void;
}

export declare function trackReactiveGet<T>(target: any, key: any, value: T, isReadonly: boolean, isShallow: boolean): T;
export declare function triggerReactiveSet<T>(target: any, name: any, oldValue: T, value: T): void;

export declare function clearReactivityByKey(key: any): void;
export declare function clearReactivity(): void;

