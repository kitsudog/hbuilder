declare namespace UniCloudNamespace {
  interface RequestOptions {
    /**
     * HTTP 请求方法, 默认为：GET. 可选值： GET, POST, DELETE, PUT
     */
    method?: 'GET' | 'POST' | 'DELETE' | 'PUT';
    /**
     * 发送的数据
     */
    data?: any;
    /**
     * 是否强制转换data为queryString
     */
    dataAsQueryString?: boolean;
    /**
     * 手动设置请求的payload，设置后会忽略data
     */
    content?: any;
    /**
     * 上传的文件，设置后将会使用 multipart/form-data 格式。如果未设置method，将会自动将method设置为POST
     */
    files?: any;
    /**
     * 上传数据的格式，设为 json 会自动在 header 内设置 Content-Type: application/json
     * - json: Content-Type: application/json
     */
    contentType?: 'json';
    /**
     * 转换data为queryString时默认不支持嵌套Object，此选项设置为true则支持转换嵌套Object
     */
    nestedQuerystring?: boolean;
    /**
     * 返回的数据格式
     * - json: 将返回值转为json，不传此参数会返回buffer
     * - text: 将返回值转为字符串，不传此参数会返回buffer
     */
    dataType?: 'json' | 'text';
    /**
     * 请求头
·1     */
    headers?: any;
    /**
     * 超时时间设置。设置为数组时第一项为请求超时，第二项为返回超时。设置为数字时相当于同时设置请求超时和返回超时，即 timeout:3000 效果等于 timeouut:[3000,3000]
     */
    timeout?: number | any[];
  }

  interface RequestResult {
    data: any;
    status: number;
    headers: Record<string, any>;
    res: Record<string, any>;
  }

  interface HttpClient {
    /**
     * 请求网络资源
     *
     * 文档: [https://uniapp.dcloud.io/uniCloud/cf-functions?id=httpclient](https://uniapp.dcloud.io/uniCloud/cf-functions?id=httpclient)
     */
    request(url: string, options?: RequestOptions): Promise<RequestResult>;
  }
  interface UniCloud {
    /**
     * 调用http服务
     *
     * 文档: [https://uniapp.dcloud.io/uniCloud/cf-functions?id=httpclient](https://uniapp.dcloud.io/uniCloud/cf-functions?id=httpclient)
     */
    httpclient: HttpClient;
  }
}
