"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PluginManager=void 0;const vscode=require("vscode"),arrays=require("./arrays"),dispose_1=require("./dispose"),path=require("path");var TypeScriptServerPlugin;!function(e){e.equals=function(e,s){return e.path===s.path&&e.name===s.name&&e.enableForWorkspaceTypeScriptVersions===s.enableForWorkspaceTypeScriptVersions&&arrays.equals(e.languages,s.languages)}}(TypeScriptServerPlugin||(TypeScriptServerPlugin={}));class PluginManager extends dispose_1.Disposable{constructor(){super(),this._pluginConfigurations=new Map,this._onDidUpdatePlugins=this._register(new vscode.EventEmitter),this.onDidChangePlugins=this._onDidUpdatePlugins.event,this._onDidUpdateConfig=this._register(new vscode.EventEmitter),this.onDidUpdateConfig=this._onDidUpdateConfig.event}get plugins(){return this._plugins||(this._plugins=this.readPlugins()),arrays.flatten(Array.from(this._plugins.values()))}setConfiguration(e,s){this._pluginConfigurations.set(e,s),this._onDidUpdateConfig.fire({pluginId:e,config:s})}configurations(){return this._pluginConfigurations.entries()}readPlugins(){const e=new Map,s=[],i=path.resolve(path.dirname(__dirname),"./tsplugins/");return s.push({name:"dcloudio",enableForWorkspaceTypeScriptVersions:!0,path:i,languages:["vue","html","css","scss","less","markdown","uts"]}),e.set("hbuilderx-language-services",s),e}}exports.PluginManager=PluginManager;