"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TypeScriptServerSpawner=void 0;const path=require("path"),vscode=require("vscode"),typescriptService_1=require("../typescriptService"),api_1=require("../utils/api"),configuration_1=require("../utils/configuration"),server_1=require("./server");class TypeScriptServerSpawner{constructor(e,r,t,s,i,a,n,o){this._versionProvider=e,this._versionManager=r,this._logDirectoryProvider=t,this._pluginPathsProvider=s,this._logger=i,this._telemetryReporter=a,this._tracer=n,this._factory=o}spawn(e,r,t,s,i,a,n){let o;const p=this.getCompositeServerType(e,r,t);switch(p){case 1:case 2:{const r={...n,tsServerProcessKind:"syntax"},c={...n,tsServerProcessKind:"semantic"},v=2===p;o=new server_1.SyntaxRoutingTsServer({syntax:this.spawnTsServer("syntax",e,t,s,i,r),semantic:this.spawnTsServer("semantic",e,t,s,i,c)},a,v);break}case 0:o=this.spawnTsServer("main",e,t,s,i,n);break;case 3:o=this.spawnTsServer("syntax",e,t,s,i,n)}return this.shouldUseSeparateDiagnosticsServer(t)?new server_1.GetErrRoutingTsServer({getErr:this.spawnTsServer("diagnostics",e,t,s,i,n),primary:o},a):o}getCompositeServerType(e,r,t){var s,i;if(!r.has(typescriptService_1.ClientCapability.Semantic))return 3;switch(t.separateSyntaxServer){case 0:return 0;case 1:return(null===(s=e.apiVersion)||void 0===s?void 0:s.gte(api_1.default.v340))?(null===(i=e.apiVersion)||void 0===i?void 0:i.gte(api_1.default.v400))?2:1:0}}shouldUseSeparateDiagnosticsServer(e){return e.enableProjectDiagnostics}spawnTsServer(e,r,t,s,i,a){const n=r.apiVersion||api_1.default.defaultVersion,o=i.create(e,this._tracer),{args:p,tsServerLogFile:c}=this.getTsServerArgs(e,t,r,n,s,o.cancellationPipeName,a);TypeScriptServerSpawner.isLoggingEnabled(t)&&(c?this._logger.info(`<${e}> Log file: ${c}`):this._logger.error(`<${e}> Could not create log directory`)),this._logger.info(`<${e}> Forking...`);const v=this._factory.fork(r.tsServerPath,p,e,t,this._versionManager);return this._logger.info(`<${e}> Starting...`),new server_1.ProcessBasedTsServer(e,this.kindToServerType(e),v,c,o,r,this._telemetryReporter,this._tracer)}kindToServerType(e){return"syntax"===e?typescriptService_1.ServerType.Syntax:typescriptService_1.ServerType.Semantic}getTsServerArgs(e,r,t,s,i,a,n){const o=[];let p;if("syntax"===e&&(s.gte(api_1.default.v401)?o.push("--serverMode","partialSemantic"):o.push("--syntaxOnly")),s.gte(api_1.default.v250)?o.push("--useInferredProjectPerProjectRoot"):o.push("--useSingleInferredProject"),(r.disableAutomaticTypeAcquisition||"syntax"===e||"diagnostics"===e)&&o.push("--disableAutomaticTypingAcquisition"),a&&o.push("--cancellationPipeName",a+"*"),TypeScriptServerSpawner.isLoggingEnabled(r)){let t=this._logDirectoryProvider.getNewLogDirectory();t=path.resolve(__dirname,"../../"),t&&(p=path.join(t,`tsserver-${e}.log`),o.push("--logVerbosity",configuration_1.TsServerLogLevel.toString(r.tsServerLogLevel)),o.push("--logFile",p))}const c=this._pluginPathsProvider.getPluginPaths();if(i.plugins.length){o.push("--globalPlugins",i.plugins.map((e=>e.name)).join(","));const e=t.path===this._versionProvider.defaultVersion.path;for(const r of i.plugins)(e||r.enableForWorkspaceTypeScriptVersions)&&c.push(r.path)}return 0!==c.length&&o.push("--pluginProbeLocations",c.join(",")),r.npmLocation&&o.push("--npmLocation",`"${r.npmLocation}"`),s.gte(api_1.default.v260)&&o.push("--locale",TypeScriptServerSpawner.getTsLocale(r)),s.gte(api_1.default.v291)&&o.push("--noGetErrOnBackgroundUpdate"),s.gte(api_1.default.v345)&&o.push("--validateDefaultNpmLocation"),o.push("--indexServerPipeName",n.indexPipeName),o.push("--indexServerType",n.tsServerProcessKind),o.push("--vscodeEnvAppData",vscode.env.appData),o.push("--clientProcessId",n.clientProcessId),{args:o,tsServerLogFile:p}}static isLoggingEnabled(e){return e.tsServerLogLevel!==configuration_1.TsServerLogLevel.Off}static getTsLocale(e){var r;return e.locale?e.locale:null!==(r={zh_CN:"zh-cn",zh_TW:"zh-tw"}[vscode.env.language])&&void 0!==r?r:vscode.env.language}}exports.TypeScriptServerSpawner=TypeScriptServerSpawner;