"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=exports.FileReferencesCommand=void 0;const fs=require("fs"),vscode=require("vscode"),nls=require("vscode-nls"),api_1=require("../utils/api"),typeConverters=require("../utils/typeConverters"),localize=nls.loadMessageBundle();function isZH_CN(){try{if(process.env.VSCODE_NLS_CONFIG)return"zh_CN"===JSON.parse(process.env.VSCODE_NLS_CONFIG).locale}catch(e){console.error(null==e?void 0:e.stack)}return!0}class FileReferencesCommand{constructor(e){this.client=e,this.id="typescript.findAllFileReferences"}async execute(e){var r,o,s;if(this.client.apiVersion.lt(FileReferencesCommand.minVersion))return void vscode.window.showErrorMessage(localize("error.unsupportedVersion","Find file references failed. Requires TypeScript 4.2+."));if(e||(e=null===(r=vscode.window.activeTextEditor)||void 0===r?void 0:r.document.uri),!e)return void vscode.window.showErrorMessage(localize("error.noResource","Find file references failed. No resource provided."));const i={file:e.fsPath,projectRootPath:null===(s=null===(o=e.workspaceFolder)||void 0===o?void 0:o.uri)||void 0===s?void 0:s.fsPath};i.projectRootPath&&!fs.existsSync(i.projectRootPath)||(this.client.executeWithoutWaitingForResponse("open",i),await vscode.window.withProgress({cancellable:!0,location:{viewId:"reference"},title:localize("progress.title","Finding file references")},(async(r,o)=>{r.report({increment:-1,level:"success",message:localize("fileReferenceBar.title",isZH_CN()?"正在查找...":"Finding...")});const s=await this.client.execute("fileReferences",{file:e.fsPath},o);if("response"!==s.type||!s.body)return;const i=s.body.refs.map((e=>typeConverters.Location.fromTextSpan(this.client.toResource(e.file),e)));try{const r=vscode.Uri.file(e.fsPath),o=new vscode.Range(0,0,0,0),s=this;await vscode.window.showReferences({location:{uri:r,range:o},references:i,refresh(){s.execute(e)}})}catch(e){console.log("[LanguageServerError] file find references error : "+e)}})))}}function register(e,r){function o(){vscode.commands.executeCommand("setContext",FileReferencesCommand.context,e.apiVersion.gte(FileReferencesCommand.minVersion))}return o(),r.register(new FileReferencesCommand(e)),e.onTsServerStarted((()=>o()))}exports.FileReferencesCommand=FileReferencesCommand,FileReferencesCommand.context="tsSupportsFileReferences",FileReferencesCommand.minVersion=api_1.default.v420,exports.register=register;