"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setLanguageConfig=exports.registerSchema=exports.initLanguageService=exports.findSchema=void 0;const path_1=require("path"),util_1=require("util"),vscode=require("vscode"),vscode_uri_1=require("vscode-uri"),core_1=require("../../../core"),vscode_json_languageservice_1=require("../../../packages/vscode-json-languageservice"),manifestUniAppx_1=require("../schemas/manifestUniAppx"),packageSchema_1=require("../schemas/packageSchema"),pagesSchema_1=require("../schemas/pagesSchema"),pagesSchemaUniAppx_1=require("../schemas/pagesSchemaUniAppx"),schemaSchema_1=require("../schemas/schemaSchema");var allSchemas=[];function findSchema(e){const a=vscode_uri_1.URI.parse(e).fsPath;let c={};return allSchemas.forEach((a=>{a.name===e&&(c=a.value)})),null!==c?Promise.resolve(JSON.stringify(c)):Promise.reject(`Unable to load schema at ${a}`)}function registerSchema(e,a,c,s){return allSchemas.forEach(((a,c)=>{a.name===e&&allSchemas.splice(c,1)})),allSchemas.push({name:e,value:a,fileMatch:c,projectType:s}),!0}function getSchemaOnlyFilePath(e){let a=[];for(const c of allSchemas){if(c.projectType)continue;const s=c.fileMatch;for(const i of s)if(i.includes("*")){if(new RegExp(`${i.replace(/\./g,"\\.").replace(/\*/,".*")}`).test(e))return a.push({fileMatch:c.fileMatch,uri:c.name}),a}else if((0,path_1.basename)(e)===i)return a.push({fileMatch:c.fileMatch,uri:c.name}),a}}function getSchemaFromProjectType(e,a){let c=[];for(const s of allSchemas){if(!s.projectType)continue;const i=a.uri.fsPath;if((0,core_1.detectProjectKind)(i)!==s.projectType)continue;const t=s.fileMatch;for(const a of t)if(a.includes("*")){if(new RegExp(`${a.replace(/\./g,"\\.").replace(/\*/,".*")}`).test(e))return c.push({fileMatch:s.fileMatch,uri:s.name}),c}else if((0,path_1.basename)(e)===a)return c.push({fileMatch:s.fileMatch,uri:s.name}),c}}function setLanguageConfig(e,a,c){let s=getSchemaOnlyFilePath(a);s?e.configure({allowComments:!0,schemas:s}):c&&(s=getSchemaFromProjectType(a,c),s&&e.configure({allowComments:!0,schemas:s}))}async function getConfigurations(e){const a=vscode.Uri.file(e),c=await vscode.workspace.fs.readFile(a),s=(new util_1.TextDecoder).decode(c);let i="";try{i=JSON.parse(s)}catch(a){console.error(a+" [SchemaFile]: "+e)}return i}async function initLanguageService(e){registerSchema("packageSchema",packageSchema_1.PackageSchema,["package.json"]),registerSchema("pagesSchema",e?(0,pagesSchemaUniAppx_1.getPagesSchemaUniAppx)():pagesSchema_1.PagesSchema,["pages.json"]),registerSchema("schemaJsonSchema",schemaSchema_1.SchemaJsonSchema,["*.schema.json"]);let a=await getConfigurations(":/config/app-manifest-schema.json"),c=await getConfigurations(":/config/uniapp-manifest-schema.json"),s=await getConfigurations(":/conf/resources/conf/settings-schema.json");registerSchema("manifest5PulsApp",a,["manifest.json"],core_1.HXProjectKind.App),registerSchema("manifestUniApp",e?(0,manifestUniAppx_1.getManifestUniAppx)():c,["manifest.json"],core_1.HXProjectKind.UniApp),registerSchema("manifestSettings",s,["settings.json"]);return(0,vscode_json_languageservice_1.getLanguageService)({schemaRequestService:findSchema,clientCapabilities:{textDocument:{completion:{completionItem:{documentationFormat:[vscode_json_languageservice_1.MarkupKind.Markdown,vscode_json_languageservice_1.MarkupKind.PlainText]}}}}})}exports.findSchema=findSchema,exports.registerSchema=registerSchema,exports.setLanguageConfig=setLanguageConfig,exports.initLanguageService=initLanguageService;