"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),vscode_languageserver_textdocument_1=require("vscode-languageserver-textdocument"),vscode_uri_1=require("vscode-uri"),core_1=require("../../../core"),utils_1=require("../../../utils"),arrays_1=require("../utils/arrays"),schemaMgr=require("./schemaManager"),schemaManager_1=require("./schemaManager"),specialStringHandler_1=require("./specialStringHandler"),utils_2=require("./utils");class JsonCompletionItemProvider{async getSpecialStringCompletionItems(e,t,s,r,i){const a={isIncomplete:!1,items:[]},n=await e.getMatchingSchemas(t,s),o=t.offsetAt(r),c=n.filter((e=>e.node.offset<o)),l=(0,utils_2.findClosestNumberObject)(c,o);if(l){const e=l.schema.type;let n=utils_1.hx.createProject(null==i?void 0:i.uri.toString());const o=await(0,specialStringHandler_1.getSpecialStringCompletionItems)(e,t,r,s,n);a.isIncomplete=o.isIncomplete,a.items.push(...o.items)}return a}async provideCompletionItems(e,t,s){const r={isIncomplete:!1,items:[]},i=await vscode.workspace.getWorkspaceFolder(e.uri);if(!i)return r;const a=(0,core_1.isUniAppXProjectByPath)(i.uri.fsPath),n=await(0,schemaManager_1.initLanguageService)(a);schemaMgr.setLanguageConfig(n,vscode_uri_1.URI.parse(e.uri.toString()).fsPath,i);const o=vscode_languageserver_textdocument_1.TextDocument.create(e.uri.toString(),"json",1,e.getText()),c=n.parseJSONDocument(o),l=await n.doComplete(o,t,c);l&&(0,utils_2.sortDefValue)(l);const m=o.getText({start:{line:t.line,character:t.character-1},end:t}),u=o.getText({start:t,end:{line:t.line,character:t.character+1}}),g='"'===m||'"'===u,p=(0,utils_2.convertCompletion)(l,g);r.items.push(...p);const d=await this.getSpecialStringCompletionItems(n,o,c,t,i);return r.isIncomplete=d.isIncomplete,r.items.push(...d.items),r.items=r.items.filter((e=>!e.label.includes("@title/"))),r.items=r.items.filter((e=>!e.label.includes("@description/"))),r.items=r.items.filter((e=>!e.label.startsWith("extensions"))),r}async resolveCompletionItem(e,t){return e}}function register(){const e=["**/package.json","**/database/*.schema.json","**/pages.json","**/manifest.json","**/settings.json"];let t=(0,arrays_1.flatten)(["json","jsonc","json_tm"].map((t=>e.map((e=>({language:t,pattern:e}))))));return vscode.languages.registerCompletionItemProvider(t,new JsonCompletionItemProvider)}exports.register=register;