{
  "description": "Run cloud functions and jql file locally",
  "displayName": "uniCloud debugger",
  "createCloudFunction.command.name": "New Cloud Function",
  "createCommonModule.command.name": "New Common Module",
  "dependency-manager.edit-function.command.name": "Manage common module/extension library dependencies",
  "dependency-manager.edit-common.command.name": "Manage common module dependencies",
  "launcher.runLocalCloudObject.name": "Run - Local cloud object",
  "launcher.debugLocalCloudObject.name": "Debug - Local cloud object",
  "launcher.runLocalCloudFunction.name": "Run - Local cloud function",
  "launcher.debugLocalCloudFunction.name": "Debug - Local cloud function",
  "uniclouddbschema.command.newdbSchemaResource": "New DB &Schema",
  "unicloud.command.updatedbSchemaResource": "Opendb check &Update",
  "launcher.uploadAndExec.name": "Upload And Run(&T)",
  "launcher.uploadAndExecFunction.name": "Upload and Run",
  "launcher.uploadAndExecObject.name": "Upload and Run",
  "launcher.configureRunTestParam.name": "Configure run test parameters(&P)",
  "uniclouddbschema.command.createSchemaJS": "Create Schema Extension(&X)",
  "uniclouddbschema.command.uploadSchemaJS": "Upload Schema Extension(&A)",
  "uniclouddbschema.command.downloadSchemaJS": "Download Schema Extension(&Z)",
  "unicloud.command.synchronouDependencies": "Uploading dependency relationship to the cloud",
  "editJqlDependency": "Manage common module, extension of schema extension",
  "unicloud.relatedServiceSpace": "Associate a cloud service space or project...(&S)",
  "unicloud.cloudFunction.uploadFunction": "Upload the deployment(&B)",
  "unicloud.cloudFunction.downloadFunction": "Download cloud function(&X)",
  "unicloud.command.uploadAllFunction": "Upload all SCF, public modules, and actions(&A)",
  "unicloud.command.downloadAllFunction": "Download all SCF, public modules, and actions(&D)",
  "unicloud.command.uploadCommonFunction": "Upload the public module(&U)",
  "unicloud.command.downloadCommonModule": "Download the public module(&D)",
  "unicloud.command.syncCommonModuleList": "Synchronize the list of common modules(&S)",
  "unicloud.command.uploadUniClientDBAction": "Upload the action(&U)",
  "unicloud.command.uploadUniClientDBActions": "Upload uni-clientDB-actions(&D)",
  "unicloud.command.downloadUniClientDBActions": "Download uni-clientDB-actions(&I)",
  "uniCloudDBManager.command.uploadDBSchemaResource": "Upload DB schema",
  "uniCloudDBManager.command.downloadDBSchemaResource": "Download DB Schema",
  "uniCloudDBManager.command.uploadAllDBSchemaResource": "Upload all DB schemas (including extensions)",
  "uniCloudDBManager.command.downloadAllDBSchemaResource": "Download all DB schemas (with extensions)",
  "unicloud.createUniCloudEnv": "Create an uniCloud cloud environment(&B)",
  "unicloud.createUniCloudEnv.tcb": "Tencent Cloud(&T)",
  "unicloud.createUniCloudEnv.aliyun": "Alibaba Cloud(&A)",
  "unicloud.createUniCloudEnv.alipay": "Alipay Cloud(&P)",
  "unicloud.createUniCloudEnv.tcbCreated": "Tencent Cloud(Created)(&T)",
  "unicloud.createUniCloudEnv.aliyunCreated": "Alibaba Cloud(Created)(&A)",
  "unicloud.createUniCloudEnv.alipayCreated": "Alipay Cloud(Created)(&P)",
  "unicloud.command.openUniCloudWebConsole": "Open uniCloud Web Console(&V)",
  "unicloud.command.initUniCloudSpaceWizard": "Cloud Service Space Initialization Wizard(&B)"

}
