{
  "description": "uniCloud plugin. Run cloudfunction, jql with HBuilderX.",
  "displayName": "uniCloud plugin",
  "createCloudFunction.command.name": "Create cloud function/cloud object",
  "createCommonModule.command.name": "Creating public module",
  "launcher.runLocalCloudObject.name": "Run - Local cloud object(&R)",
  "launcher.stopRunLocalCloudObject.name": "Stopped Running - Local cloud object(&R)",
  "launcher.debugLocalCloudObject.name": "Debug - Local cloud object(&D)",
  "launcher.stopDebugLocalCloudObject.name": "Stop debugging - Local cloud object(&D)",
  "launcher.runLocalCloudFunction.name": "Run - Local cloud function(&R)",
  "launcher.stopRunLocalCloudFunction.name": "Stopped Running - Local cloud function(&R)",
  "launcher.debugLocalCloudFunction.name": "Debug - Local cloud function(&D)",
  "launcher.stopDebugLocalCloudFunction.name": "Stop debugging - Local cloud function(&D)",
  "launcher.uploadAndExec.name": "Upload And Run(&T)",
  "launcher.uploadAndExecFunction.name": "Upload and Run",
  "launcher.uploadAndExecObject.name": "Upload and Run",
  "launcher.configureRunTestParam.name": "Configure run test parameters(&P)",
  "uniCloud.appService.uploadAppBuildPkg": "One-click upload to uniCloud (more favorable CDN, long-term stability)",
  "unicloud.relatedServiceSpace": "Associate a cloud service space or project...(&S)",
  "unicloud.cloudFunction.uploadFunction": "Upload the deployment(&B)",
  "unicloud.cloudFunction.downloadFunction": "Download cloud function(&X)",
  "unicloud.command.uploadAllFunction": "Upload all SCF, public modules, and actions(&A)",
  "unicloud.command.downloadAllFunction": "Download all SCF, public modules, and actions(&D)",
  "unicloud.command.uploadCommonFunction": "Upload the public module(&U)",
  "unicloud.command.downloadCommonModule": "Download the public module(&D)",
  "unicloud.command.syncCommonModuleList": "Synchronize the list of common modules(&S)",
  "unicloud.command.uploadUniClientDBAction": "Upload the action(&U)",
  "unicloud.command.uploadUniClientDBActions": "Upload uni-clientDB-actions(&D)",
  "unicloud.command.downloadUniClientDBActions": "Download uni-clientDB-actions(&I)",
  "unicloud.command.viewRelatedProjectServiceSpace": "View the cloud workspace of the associated project(&A)",
  "unicloud.command.unBindRelatedProjectServiceSpace": "Unbind the associated cloud workspace(&U)",
  "unicloud.command.moveServiceSpaceToRelatedProject": "Move to Associated Projects(&M)",
  "unicloud.command.openUniCloudWebConsole": "Open uniCloud Web Console(&V)",
  "unicloud.command.initUniCloudSpaceWizard": "Cloud Service Space Initialization Wizard(&B)",
  "unicloud.command.createCloudCommonDir": "Create new common directory(&R)",
  "editFunctionDependency": "Manage common module, extension dependencies",
  "editCommonDependency": "Manage common module dependencies",
  "editJqlDependency": "Manage common module, extension of schema extension",
  "synchronouJqlDependencies": "Upload configuration of schema extension",
  "staticFilesDeployName": "Static files Deploy",
  "staticFilesDeployDisplyName": "Static files Deploy",
  "uniCloudDBManager.plugin.name": "unicloud-db-manager plugin",
  "uniCloudDBManager.plugin.description": "unicloud-db-manager plugin",
  "uniCloudDBManager.plugin.displayName": "unicloud-db-manager plugin",
  "uniCloudDBManager.command.newDBSchemaResource": "New DB &Schema",
  "uniCloudDBManager.command.updateDBSchemaResource": "Opendb check &Update",
  "uniCloudDBManager.command.uploadSchemaJS": "&Upload Schema Extension",
  "uniCloudDBManager.command.downloadSchemaJS": "&Download Schema Extension",
  "uniCloudDBManager.command.createSchemaJS": "&Create Schema Extension",
  "uniCloudDBManager.command.initDB": "&Initialize cloud database (including Schema and validation functions)",
  "uniCloudDBManager.command.initDBData": "&Initialize cloud database data",
  "uniCloudDBManager.command.initDBIndex": "&Initialize cloud database index",
  "uniCloudDBManager.command.uploadDBSchemaResource": "Upload DB schema",
  "uniCloudDBManager.command.downloadDBSchemaResource": "Download DB Schema",
  "uniCloudDBManager.command.uploadAllDBSchemaResource": "Upload all DB schemas (including extensions)",
  "uniCloudDBManager.command.downloadAllDBSchemaResource": "Download all DB schemas (with extensions)",
  "uniCloudDBManager.command.uploadValidateFunction": "Upload database validate function(&I)",
  "uniCloudDBManager.command.uploadAllValidateFunction": "Upload all database validate function(&T)",
  "uniCloudDBManager.command.downloadValidateFunction": "Download database validate function(&K)",
  "uniCloudDBManager.command.downloadAllValidateFunction": "Download all database validate function(&J)",
  "uniCloudDBManager.command.newValidateFunction": "Create a database validate function(&V)",
  "uniCloudDBManager.command.createValidateFunctionDir": "Create a directory database validate function(&V)",
  "uniCloud.WebHost.Upload.Title": "Upload the website to the server(&N)"
}
