const path=require("path"),BaseController=require("./base"),localPath=process.env.UNICLOUD_DEBUGGER_PATH;function getSingleCommandMsg({action:e,command:t}={}){const o=t.$db,n=o&&o.find((e=>"collection"===e.$method)),r=n&&n.$param&&n.$param;let c;return c=1===r.length?r[0]:r.map((e=>"string"==typeof e?e:e&&e.$db&&e.$db[0]&&e.$db[0].$param&&e.$db[0].$param[0])),`表名：${c}`+(e?`，action：${e}`:"")}function formatClientDBMsg(e){const{action:t,command:o,multiCommand:n}=e;let r="";return n?(r+="收到clientDB multiSend请求：",r+=n.map((e=>getSingleCommandMsg(e))).join("；")):(r+="收到clientDB请求：",r+=getSingleCommandMsg({action:t,command:o})),r}function formatCallFunctionParam(e){const t=JSON.parse(JSON.stringify(e||{}));return delete t.clientInfo,delete t.uniCloudDeviceId,delete t.uniCloudClientInfo,t}module.exports=class extends BaseController{constructor(){super(),this.name="cloudfunctions"}async exec(){const{service:e,data:t,logger:o}=this.ctx,{provider:n,param:r}=t;let c,a;try{a=(await this.ctx.jsonRpcClient.call("syncSecret",{provider:n})).uniCloudSecret}catch(e){console.error(e),this.ctx.throw("请求云函数出错："+e.message,e.code||"INTERNAL_ERROR")}"DCloud-clientDB"===e?o.log(formatClientDBMsg(r)):o.log(`[${e}]请求参数：`,formatCallFunctionParam(r));try{c=require(path.resolve(this.ctx.servePath,localPath,n,"serve.js"))}catch(e){console.error(e),this.ctx.throw("请求云函数出错："+e.message,e.code||"INTERNAL_ERROR")}try{const t=await c(e,r,{clientIP:this.ctx.req.connection.remoteAddress,userAgent:this.ctx.req.headers["user-agent"],uniCloudSecret:a});return"DCloud-clientDB"===e?t.code?o.error(t.code+": "+t.message):o.log(`${formatClientDBMsg(r)}，返回数据：`,t):o.log(`[${e}]返回结果：`,t),t}catch(e){console.error(e),this.ctx.throw(e.message||"请求云函数出错",e.code||"FUNCTION_EXCUTE_ERROR")}}};