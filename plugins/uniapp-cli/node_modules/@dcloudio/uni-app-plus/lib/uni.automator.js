"use strict";var t=require("fs"),e=require("debug"),s=require("postcss-selector-parser"),a=require("fs-extra"),i=require("licia/dateFormat"),r=require("path"),o=require("util"),n=require("jimp"),l=require("dns");function c(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var d=c(t),u=c(e),h=c(s),p=c(a),m=c(i),y=c(r),f=c(n),v=c(l);function g(t){t.walk((t=>{if("tag"===t.type){const e=t.value;t.value="page"===e?"body":"uni-"+e}}))}u.default("automator:devtool");const $=["Page.getElement","Page.getElements","Element.getElement","Element.getElements"];const w=/^win/.test(process.platform);function M(t){try{return require(t)}catch(e){return require(require.resolve(t,{paths:[process.cwd()]}))}}const P=u.default("automator:launcher"),_=o.promisify(d.default.readdir),A=o.promisify(d.default.stat);async function E(t){const e=await _(t);return(await Promise.all(e.map((async e=>{const s=r.resolve(t,e);return(await A(s)).isDirectory()?E(s):s})))).reduce(((t,e)=>t.concat(e)),[])}class S{constructor(t){this.isX=!1,"true"===process.env.UNI_APP_X&&(this.isX=!0),this.id=t.id,this.app=t.executablePath,this.appid=t.appid||process.env.UNI_APP_ID||(this.isX?"__UNI__uniappx":"HBuilder"),this.package=t.package||(this.isX?"io.dcloud.uniappx":"io.dcloud.HBuilder"),this.activity=t.activity||(this.isX?"io.dcloud.uniapp.UniAppActivity":"io.dcloud.PandoraEntry")}shouldPush(){return this.exists(this.FILE_APP_SERVICE).then((()=>(P(`${m.default("yyyy-mm-dd HH:MM:ss:l")} ${this.FILE_APP_SERVICE} exists`),!1))).catch((()=>(P(`${m.default("yyyy-mm-dd HH:MM:ss:l")} ${this.FILE_APP_SERVICE} not exists`),!0)))}push(t){return E(t).then((e=>{const s=e.map((e=>{const s=(t=>w?t.replace(/\\/g,"/"):t)(r.join(this.DIR_WWW,r.relative(t,e)));return P(`${m.default("yyyy-mm-dd HH:MM:ss:l")} push ${e} ${s}`),this.pushFile(e,s)}));return Promise.all(s)})).then((t=>!0))}get FILE_APP_SERVICE(){return`${this.DIR_WWW}/app-service.js`}}const b=u.default("automator:simctl");function H(t){const e=parseInt(t);return e>9?String(e):"0"+e}class x extends S{constructor(){super(...arguments),this.bundleVersion=""}async init(){const t=M("node-simctl").Simctl;this.tool=new t({udid:this.id});try{await this.tool.bootDevice()}catch(t){}await this.initSDCard(),b(`${m.default("yyyy-mm-dd HH:MM:ss:l")} init ${this.id}`)}async initSDCard(){const t=await this.tool.appInfo(this.package);b(`${m.default("yyyy-mm-dd HH:MM:ss:l")} appInfo ${t}`);const e=t.match(/DataContainer\s+=\s+"(.*)"/);if(!e)return Promise.resolve("");const s=t.match(/CFBundleVersion\s+=\s+(.*);/);if(!s)return Promise.resolve("");this.sdcard=e[1].replace("file:",""),this.bundleVersion=s[1],b(`${m.default("yyyy-mm-dd HH:MM:ss:l")} install ${this.sdcard}`)}async version(){return Promise.resolve(this.bundleVersion)}formatVersion(t){const e=t.split(".");return 3!==e.length?t:e[0]+H(e[1])+H(e[2])}async install(){return b(`${m.default("yyyy-mm-dd HH:MM:ss:l")} install ${this.app}`),await this.tool.installApp(this.app),await this.tool.grantPermission(this.package,"all"),await this.initSDCard(),Promise.resolve(!0)}async start(){console.log("ios simulator start");try{await this.tool.terminateApp(this.package)}catch(t){console.error("ios simulator start terminateApp fail",t)}try{await this.tool.launchApp(this.package)}catch(t){console.error("ios simulator start launchApp fail",t),console.error(t)}return Promise.resolve(!0)}async exit(){return await this.tool.terminateApp(this.package),await this.tool.shutdownDevice(),Promise.resolve(!0)}async captureScreenshot(t){const e=await Promise.resolve(await this.tool.getScreenshot());return new Promise(((s,a)=>{var i,r;void 0!==(null===(i=null==t?void 0:t.area)||void 0===i?void 0:i.x)&&void 0!==(null===(r=null==t?void 0:t.area)||void 0===r?void 0:r.y)?f.default.read(Buffer.from(e,"base64")).then((e=>{const i=t.area.x,r=t.area.y;let o=e.bitmap.width-i;t.area.width&&(o=Math.min(o,t.area.width));let n=e.bitmap.height-r;t.area.height&&(n=Math.min(n,t.area.height)),e.crop(i,r,o,n).getBase64Async(f.default.MIME_PNG).then((t=>{s(t.replace("data:image/png;base64,",""))})).catch((t=>{a(t)}))})).catch((t=>{a(t)})):s(e)}))}exists(t){return p.default.existsSync(t)?Promise.resolve(!0):Promise.reject(Error(`${t} not exists`))}pushFile(t,e){return Promise.resolve(p.default.copySync(t,e))}adbCommand(t){return new Promise((t=>{t("adbCommand only for App Android!")}))}get DIR_WWW(){return"true"===process.env.UNI_APP_X?`${this.sdcard}/Documents/uni-app-x/apps/__UNI__uniappx/www/`:`${this.sdcard}/Documents/Pandora/apps/${this.appid}/www/`}}const I=M("adbkit"),N=u.default("automator:adb");class D extends S{constructor(){super(...arguments),this.needStart=!0}async init(){if(void 0!==v.default.setDefaultResultOrder&&v.default.setDefaultResultOrder("ipv4first"),this.tool=I.createClient(),N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} init ${await this.tool.version()}`),!this.id){const t=await this.tool.listDevices();if(!t.length)throw Error("Device not found");this.id=t[0].id}console.log("before echo ${$EXTERNAL_STORAGE}"),this.sdcard=(await this.shell(this.COMMAND_EXTERNAL)).trim(),console.log("after echo ${$EXTERNAL_STORAGE}",this.sdcard),N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} init ${this.id} ${this.sdcard}`)}root(){return this.tool.root(this.id).then((()=>{N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} root ${this.id} ${this.sdcard}`)})).catch((t=>{N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} root ${this.id} ${t}`)}))}version(){return this.shell(this.COMMAND_VERSION).then((t=>{const e=t.match(/versionName=(.*)/);return e&&e.length>1?e[1]:""}))}formatVersion(t){return t}async install(){let t=!0;try{const e=(await this.tool.getProperties(this.id))["ro.build.version.release"].split(".")[0];parseInt(e)<6&&(t=!1)}catch(t){}if(N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} install ${this.app} permission=${t}`),t){const t=M("adbkit/lib/adb/command.js"),e=t.prototype._send;t.prototype._send=function(t){return 0===t.indexOf("shell:pm install -r ")&&(t=t.replace("shell:pm install -r ","shell:pm install -r -g "),N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} ${t} `)),e.call(this,t)}}return this.tool.install(this.id,this.app).then((()=>{N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} installed`),this.init()}))}start(){return this.needStart?this.exit().then((()=>this.shell(this.COMMAND_START))):Promise.resolve()}exit(){return this.shell(this.COMMAND_STOP)}captureScreenshot(t){return this.tool.screencap(this.id).then((e=>new Promise(((s,a)=>{const i=[];e.on("data",(function(t){i.push(t)})),e.on("end",(function(){var e,r;void 0!==(null===(e=t.area)||void 0===e?void 0:e.x)&&void 0!==(null===(r=t.area)||void 0===r?void 0:r.y)?f.default.read(Buffer.concat(i)).then((e=>{var i,r,o,n;const l=t.area.x,c=t.area.y;let d=e.bitmap.width-l;(null===(i=t.area)||void 0===i?void 0:i.width)&&(d=Math.min(d,null===(r=t.area)||void 0===r?void 0:r.width));let u=e.bitmap.height-c;(null===(o=t.area)||void 0===o?void 0:o.height)&&(u=Math.min(u,null===(n=t.area)||void 0===n?void 0:n.height)),e.crop(l,c,d,u).getBase64Async(f.default.MIME_PNG).then((t=>{s(t.replace("data:image/png;base64,",""))})).catch((t=>{a(t)}))})).catch((t=>{a(t)})):s(Buffer.concat(i).toString("base64"))}))}))))}adbCommand(t){return new Promise((e=>{this.tool.shell(this.id,t).then((t=>{let s,a="";t.on("data",(t=>{a+=t.toString(),s&&clearTimeout(s),s=setTimeout((()=>{e(a)}),50)})),setTimeout((()=>{e(a)}),1500)}))}))}exists(t){return this.tool.stat(this.id,t)}pushFile(t,e){return this.tool.push(this.id,t,e)}async push(t){if(!process.env.UNI_HBUILDERX_PLUGINS)return super.push(t);const e=y.default.join(process.env.UNI_HBUILDERX_PLUGINS,"launcher","out","export","pushResources.js"),s=process.env.HX_CONFIG_ADB_PATH||y.default.join(process.env.UNI_HBUILDERX_PLUGINS,"launcher-tools","tools","adbs","adb"),a=[e,s].map((t=>d.default.promises.access(t,d.default.constants.F_OK).then((()=>`${t} exists`)).catch((()=>`${t} not exists`))));return Promise.all(a).then((()=>{const{PushResources:a}=require(e);return new a({adbPath:s,appid:this.appid,uuid:this.id,packageName:this.package,sourcePath:t}).start(),this.needStart=!1,!0})).catch((async e=>(console.log("pushResources or adb not exists: ",e),await super.push(t))))}shell(t){return N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} SEND ► ${t}`),this.tool.shell(this.id,t).then(I.util.readAll).then((t=>{const e=t.toString();return N(`${m.default("yyyy-mm-dd HH:MM:ss:l")} ◀ RECV ${e}`),e}))}get DIR_WWW(){return`/storage/emulated/0/Android/data/${this.package}/apps/${this.appid}/www`}get COMMAND_EXTERNAL(){return"echo $EXTERNAL_STORAGE"}get COMMAND_VERSION(){return`dumpsys package ${this.package}`}get COMMAND_STOP(){return`am force-stop ${this.package}`}get COMMAND_START(){return`am start -n ${this.package}/${this.activity} --es appid ${this.appid} --ez needUpdateApp false --ez reload true --ez externalStorage true`}}const R=u.default("automator:devtool");let C,O=!1;const T={android:/android_version=(.*)/,ios:/iphone_version=(.*)/};const L={"Tool.close":{reflect:async()=>{}},"App.exit":{reflect:async()=>C.exit()},"App.enableLog":{reflect:()=>Promise.resolve()},"App.captureScreenshotWithDevice":{reflect:async(t,e)=>{const s=await C.captureScreenshot(e);return R(`App.captureScreenshot ${s.length}`),{data:s}}},"App.adbCommand":{reflect:async(t,e)=>{const s=await C.adbCommand(e);return R(`App.adbCommand ${s.length}`),{data:s}}}};!function(t){$.forEach((e=>{t[e]=function(t){return{reflect:async(e,s)=>e(t,s,!1),params:t=>(t.selector&&(t.selector=h.default(g).processSync(t.selector)),t)}}(e)}))}(L);const k={devtools:{name:"App",paths:[],required:["manifest.json","app-service.js"],validate:async function(t,e){t.platform=(t.platform||process.env.UNI_OS_NAME).toLocaleLowerCase(),Object.assign(t,t[t.platform]),C=function(t,e){return"ios"===t?new x(e):new D(e)}(t.platform,t),await C.init();const s=await C.version();if(s){if(t.version){const e=C.formatVersion(function(t,e){if(t.endsWith(".txt"))try{const s=d.default.readFileSync(t).toString().match(T[e]);if(s)return s[1]}catch(t){console.error(t)}return t}(t.version,t.platform));R(`version: ${s}`),R(`newVersion: ${e}`),e!==s&&(O=!0)}}else O=!0;if(O){if(!t.executablePath)throw Error(`app-plus->${t.platform}->executablePath is not provided`);if(!d.default.existsSync(t.executablePath))throw Error(`${t.executablePath} not exists`)}return t},create:async function(t,e,s){O&&await C.install(),(O||s.compiled||await C.shouldPush())&&await C.push(t),await C.start()}},adapter:L};module.exports=k;
